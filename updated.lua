
local t = {
	["AcceptAreaSpiritHeal"] = [=[Signs up for the Spirit Healer's resurrection timer in battlegrounds when in range.]=],
	["AcceptBattlefieldPort"] = [=[Enters the Battleground if the queue is ready.]=],
	["AcceptDuel"] = [=[Accepts a duel challenge.]=],
	["AcceptGroup"] = [=[Accepts the invitation from a group.]=],
	["AcceptGuild"] = [=[Accepts a guild invite.]=],
	["AcceptProposal"] = [=[Enters the Dungeon if the LFG queue is ready.]=],
	["AcceptQuest"] = [=[Accepts the currently offered quest.]=],
	["AcceptResurrect"] = [=[Accepts a resurrection offer.]=],
	["AcceptSockets"] = [=[Confirms pending gems for socketing.]=],
	["AcceptTrade"] = [=[Accepts the current trade offer.]=],
	["AcceptXPLoss"] = [=[Confirms the [[resurrection sickness]] and durability loss penalty on being resurrected by a spirit healer.]=],
	["ActionHasRange"] = [=[True if the action has has a range requirement.]=],
	["AddAutoQuestPopUp"] = [=[Adds a notification to the ObjectiveTrackerFrame that a quest is available or completed.]=],
	["AddChatWindowChannel"] = [=[Enables messages from a chat channel index for a chat window.]=],
	["AddChatWindowMessages"] = [=[Enables messages from the chat message type (e.g. "SAY") for a chat window.]=],
	["AddTrackedAchievement"] = [=[Tracks an achievement.]=],
	["AddTradeMoney"] = [=[Adds money currently held by the cursor to the trade offer.]=],
	["ArchaeologyMapUpdateAll"] = [=[Updates and returns the amount of [[digsite]]s in a zone.]=],
	["AscendStop"] = [=[Called when the player releases the jump key.]=],
	["AssistUnit"] = [=[Assists the unit by targeting the same target.]=],
	["AttackTarget"] = [=[Toggles auto-attacking of the current target.]=],
	["AutoEquipCursorItem"] = [=[Equips the item currently held by the cursor.]=],
	["AutoStoreGuildBankItem"] = [=[Withdraws an item from the Guild Bank to the character's inventory.]=],
	["BankButtonIDToInvSlotID"] = [=[Maps a BankButtonID to InventorySlotID.]=],
	["BindEnchant"] = [=[Confirms that enchanting an item will make it soulbound.]=],
	["BNConnected"] = [=[True if the WoW Client is connected to Battle.net.]=],
	["BNGetFOFInfo"] = [=[Returns info for the specified friend of a Battle.net friend.]=],
	["BNGetFriendInviteInfo"] = [=[Returns info for a Battle.net friend invite.]=],
	["BNGetInfo"] = [=[Returns the player's own Battle.net info.]=],
	["BNGetNumFriends"] = [=[Returns the amount of (online) Battle.net friends.]=],
	["BNSendGameData"] = [=[Sends an addon comm message to a Battle.net friend.]=],
	["BNSetAFK"] = [=[Sets the player's online AFK status.]=],
	["BNSetDND"] = [=[Sets the player's online DND status.]=],
	["BNSetFriendFavoriteFlag"] = [=[Favorites a Battle.net friend.]=],
	["BreakUpLargeNumbers"] = [=[Divides digits into groups using a localized delimiter character.]=],
	["BuybackItem"] = [=[Buys back an item from the merchant.]=],
	["BuyGuildCharter"] = [=[Purchases a [[Guild Charter]].]=],
	["BuyMerchantItem"] = [=[Buys an item from a merchant.]=],
	["BuyTrainerService"] = [=[Buys a trainer service (e.g. class skills and profession recipes).]=],
	["C_AreaPoiInfo.GetAreaPOIInfo"] = [=[Returns info for an area point of interest (e.g. World PvP objectives).]=],
	["C_AreaPoiInfo.GetAreaPOISecondsLeft"] = [=[Returns the time left in seconds for an area point of interest.]=],
	["C_ArtifactUI.Clear"] = [=[Clears data of the last opened artifact weapon.]=],
	["C_AuctionHouse.CalculateCommodityDeposit"] = [=[Returns required deposit for posting a commodity and quantity.]=],
	["C_AuctionHouse.CalculateItemDeposit"] = [=[Returns required deposit for posting a specific item and quantity.]=],
	["C_AuctionHouse.CanCancelAuction"] = [=[Returns if the auction can be cancelled. If it can't, load it with [[API C_AuctionHouse.QueryOwnedAuctions|QueryOwnedAuctions]].]=],
	["C_AuctionHouse.CancelCommoditiesPurchase"] = [=[Abort an incomplete commodity purchase to avoid it conflicting with another purchase.]=],
	["C_AuctionHouse.CancelSell"] = [=[Stop posting auctions for an non-commodity item.]=],
	["C_AuctionHouse.CloseAuctionHouse"] = [=[Close the auction house window.]=],
	["C_AuctionHouse.GetAvailablePostCount"] = [=[Returns the available quantity of an item for posting.]=],
	["C_AuctionHouse.GetBrowseResults"] = [=[Returns the currently loaded summary results resulting from [[API C_AuctionHouse.SendBrowseQuery|SendBrowseQuery]].]=],
	["C_AuctionHouse.GetCancelCost"] = [=[Returns the cost for cancelling a specific owned auction. This is non-zero if it has a bid.]=],
	["C_AuctionHouse.GetCommoditySearchResultsQuantity"] = [=[Returns how many of the commodity is on sale.]=],
	["C_AuctionHouse.GetExtraBrowseInfo"] = [=[Returns the level (from 1-120, BfA levels) that some items would be crafted at.]=],
	["C_AuctionHouse.GetFilterGroups"] = [=[Returns groups of filters for use in the Filter dropdown in the Buy tab.]=],
	["C_AuctionHouse.GetItemCommodityStatus"] = [=[Returns if the item is a commodity, item or neither.]=],
	["C_AuctionHouse.GetItemKeyFromItem"] = [=[Returns an auction house item key from an item location.]=],
	["C_AuctionHouse.GetItemKeyInfo"] = [=[Returns more details about an item from its item key, including its name.]=],
	["C_AuctionHouse.GetItemKeyRequiredLevel"] = [=[Returns the required level to use an item found on the auction house.]=],
	["C_AuctionHouse.GetItemSearchResultsQuantity"] = [=[Returns how many of the item is available on the auction house.]=],
	["C_AuctionHouse.GetNumCommoditySearchResults"] = [=[Returns the number of commodity results, the different prices.]=],
	["C_AuctionHouse.GetNumItemSearchResults"] = [=[Returns the number of item results, the different auctions.]=],
	["C_AuctionHouse.GetNumOwnedAuctions"] = [=[Returns the number of auctions the player has active on the auction house.]=],
	["C_AuctionHouse.GetOwnedAuctionInfo"] = [=[Returns information for one of the player's active auctions.]=],
	["C_AuctionHouse.GetReplicateItemBattlePetInfo"] = [=[Returns display info for a battle pet from a [[API C_AuctionHouse.ReplicateItems|ReplicateItems]] result.]=],
	["C_AuctionHouse.GetReplicateItemLink"] = [=[Returns the item link (if loaded) for an item from a [[API C_AuctionHouse.ReplicateItems|ReplicateItems]] result.]=],
	["C_AuctionHouse.HasFullBrowseResults"] = [=[Returns if the last group of summary results (groups of 500) is available.]=],
	["C_AuctionHouse.IsSellItemValid"] = [=[Returns if an item from your bag can be posted on the auction house.]=],
	["C_AuctionHouse.IsThrottledMessageSystemReady"] = [=[Returns if the next query will be throttled, either delayed or cancelled.]=],
	["C_AuctionHouse.MakeItemKey"] = [=[Returns an auction house item key.]=],
	["C_AuctionHouse.QueryOwnedAuctions"] = [=[Queries the auction house for the player's active auctions.]=],
	["C_AuctionHouse.SearchForItemKeys"] = [=[Queries the auction house for summary results of up to 100 specific items.]=],
	["C_BattleNet.GetFriendNumGameAccounts"] = [=[Returns the number of game accounts for the Battle.net friend.]=],
	["C_BlackMarket.Close"] = [=[Closes the [[Black Market]] window.]=],
	["C_BlackMarket.GetItemInfoByID"] = [=[Returns info for a [[Black Market]] auction.]=],
	["C_ChatInfo.RegisterAddonMessagePrefix"] = [=[Registers an addon message prefix to receive messages for that prefix.]=],
	["C_ChatInfo.SendAddonMessage"] = [=[Sends a message over an addon comm channel.]=],
	["C_ClassColor.GetClassColor"] = [=[Returns a ColorMixin for a class.]=],
	["C_ContributionCollector.GetBuffs"] = [=[Returns the buffs provided by a building (e.g. in a [[Warfront]]).]=],
	["C_ContributionCollector.IsAwaitingRewardQuestData"] = [=[True if the client is waiting for quest reward data.]=],
	["C_CreatureInfo.GetClassInfo"] = [=[Returns info for a class by ID.]=],
	["C_CurrencyInfo.ExpandCurrencyList"] = [=[Expands/collapses a currency list header.]=],
	["C_CurrencyInfo.GetBackpackCurrencyInfo"] = [=[Returns info for a tracked currency in the backpack.]=],
	["C_CurrencyInfo.GetCurrencyInfo"] = [=[Returns info for a currency by ID.]=],
	["C_CurrencyInfo.GetCurrencyLink"] = [=[Returns a currency link.]=],
	["C_CurrencyInfo.GetCurrencyListInfo"] = [=[Returns info for a currency in the [[currency tab]].]=],
	["C_CurrencyInfo.GetCurrencyListSize"] = [=[Returns the amount of currencies and headers in the currency tab.]=],
	["C_CurrencyInfo.SetCurrencyBackpack"] = [=[Tracks a currency in the backpack.]=],
	["C_CurrencyInfo.SetCurrencyUnused"] = [=[Marks a currency as unused in the currency tab.]=],
	["C_CVar.GetCVar"] = [=[Returns the current value of a console variable.]=],
	["C_CVar.RegisterCVar"] = [=[Temporarily registers a custom console variable.]=],
	["C_CVar.ResetTestCVars"] = [=[Resets the {{api|t=c|ActionCam}} cvars.]=],
	["C_DateAndTime.AdjustTimeByDays"] = [=[Returns the date after a specified amount of days.]=],
	["C_DateAndTime.GetCalendarTimeFromEpoch"] = [=[Returns the date for a specified amount of time since the UNIX epoch for the OS time zone.]=],
	["C_DateAndTime.GetServerTimeLocal"] = [=[Returns the server's [[Wikipedia:Unix_time|Unix time]] offset by the server's timezone.]=],
	["C_DeathInfo.GetDeathReleasePosition"] = [=[When the player is dead and hasn't released spirit, returns the location of the graveyard they will release to.]=],
	["C_EncounterJournal.GetLootInfo"] = [=[Returns info for loot items available from an encounter.]=],
	["C_EncounterJournal.GetSlotFilter"] = [=[Returns the current item slot filter for loot items.]=],
	["C_EncounterJournal.ResetSlotFilter"] = [=[Resets the item slot filter for loot items.]=],
	["C_EncounterJournal.SetSlotFilter"] = [=[Sets the item slot filter for loot items.]=],
	["C_FogOfWar.GetFogOfWarForMap"] = [=[Returns the fog of war for an [[Island Expedition]] map.]=],
	["C_FogOfWar.GetFogOfWarInfo"] = [=[Returns info for the fog of war for an [[Island Expedition]] map.]=],
	["C_FriendList.SendWho"] = [=[Requests a list of other online players.]=],
	["C_FriendList.SetWhoToUi"] = [=[Sets how the result of a [[MACRO who|/who]] request will be delivered.]=],
	["C_Garrison.GetFollowers"] = [=[Returns a list of garrison tech followers.]=],
	["C_GossipInfo.CloseGossip"] = [=[Closes the gossip window.]=],
	["C_GossipInfo.ForceGossip"] = [=[True if gossip text must be displayed. For example making this return true shows the Banker gossip.]=],
	["C_GossipInfo.GetActiveQuests"] = [=[Returns the quests which can be turned in at a quest giver.]=],
	["C_GossipInfo.GetAvailableQuests"] = [=[Returns the available quests at a quest giver.]=],
	["C_GossipInfo.GetOptions"] = [=[Returns the available gossip options at a quest giver.]=],
	["C_GossipInfo.GetPoiForUiMapID"] = [=[Returns any gossip point of interest on the map.]=],
	["C_GossipInfo.GetPoiInfo"] = [=[Returns info for a gossip point of interest (e.g. the red flags when asking city guards for directions).]=],
	["C_GossipInfo.GetText"] = [=[Returns the gossip text.]=],
	["C_GossipInfo.SelectActiveQuest"] = [=[Selects an active quest from the gossip window.]=],
	["C_GossipInfo.SelectAvailableQuest"] = [=[Selects an available quest from the gossip window.]=],
	["C_GuildInfo.CanEditOfficerNote"] = [=[True if the player can edit guild officer notes.]=],
	["C_GuildInfo.CanSpeakInGuildChat"] = [=[True if the player can use guild chat.]=],
	["C_GuildInfo.CanViewOfficerNote"] = [=[True if the player can view guild officer notes.]=],
	["C_LFGList.GetActivityGroupInfo"] = [=[Returns info for an activity group.]=],
	["C_LFGList.GetActivityInfoExpensive"] = [=[Returns the zone associated with an activity.]=],
	["C_LFGList.GetApplicantMemberInfo"] = [=[Returns info for an applicant.]=],
	["C_LFGList.GetApplicantMemberStats"] = [=[Returns the [[Proving Grounds]] stats of an applicant.]=],
	["C_LFGList.GetApplicants"] = [=[Returns the list of applicants to your group.]=],
	["C_LFGList.GetAvailableActivities"] = [=[Returns a list of available LFG activities.]=],
	["C_LFGList.GetAvailableActivityGroups"] = [=[Returns a list of available LFG groups.]=],
	["C_LFGList.GetAvailableCategories"] = [=[Returns a list of available LFG categories.]=],
	["C_Map.GetMapChildrenInfo"] = [=[Returns info for the children of a map.]=],
	["C_Map.GetMapInfoAtPosition"] = [=[Returns info for any child or adjacent maps at a position on the map.]=],
	["C_Map.GetPlayerMapPosition"] = [=[Returns the location of the unit on a map.]=],
	["C_Map.GetWorldPosFromMapPos"] = [=[Translates a map position to a world map position.]=],
	["C_MountJournal.GetMountAllCreatureDisplayInfoByID"] = [=[Returns the display IDs for a mount.]=],
	["C_MountJournal.GetNumDisplayedMounts"] = [=[Returns the number of (filtered) mounts shown in the mount journal.]=],
	["C_NewItems.IsNewItem"] = [=[True if the item in the inventory slot is flagged as new.]=],
	["C_PartyInfo.InviteUnit"] = [=[Invites a player to your group.]=],
	["C_PartyInfo.LeaveParty"] = [=[Leaves the group.]=],
	["C_PartyPose.GetPartyPoseInfoByMapID"] = [=[Returns party pose info for an [[Island Expedition]] or [[Warfront]].]=],
	["C_PetJournal.GetBattlePetLink"] = [=[Returns a battle pet link.]=],
	["C_PetJournal.GetOwnedBattlePetString"] = [=[Returns a formatted string how many of a battle pet species the player has collected.]=],
	["C_PetJournal.GetPetStats"] = [=[Returns the stats of a collected battle pet.]=],
	["C_PetJournal.PetIsFavorite"] = [=[True if the collected battle pet is favorited.]=],
	["C_PlayerInfo.GUIDIsPlayer"] = [=[True if the GUID belongs to a player.]=],
	["C_PlayerInfo.IsConnected"] = [=[True if the player is connected.]=],
	["C_PlayerInfo.UnitIsSameServer"] = [=[True if a player is from the same or [[Connected Realm|connected]] realm.]=],
	["C_PvP.GetOutdoorPvPWaitTime"] = [=[Returns the time until the next battle in a PvP zone like Wintergrasp and Tol Barad.]=],
	["C_QuestLog.AbandonQuest"] = [=[Abandons the quest specified by {{api|C_QuestLog.SetAbandonQuest}}.]=],
	["C_QuestLog.AddQuestWatch"] = [=[Tracks a quest.]=],
	["C_QuestLog.AddWorldQuestWatch"] = [=[Tracks a world quest.]=],
	["C_QuestLog.GetAbandonQuest"] = [=[Returns the quest specified by {{api|C_QuestLog.SetAbandonQuest}}.]=],
	["C_QuestLog.GetAllCompletedQuestIDs"] = [=[Returns all completed quests for the character.]=],
	["C_QuestLog.GetLogIndexForQuestID"] = [=[Returns the quest log index for a quest ID.]=],
	["C_QuestLog.GetNumQuestWatches"] = [=[Returns the number of tracked quests.]=],
	["C_QuestLog.GetQuestObjectives"] = [=[Returns info for the objectives of a quest.]=],
	["C_QuestLog.GetQuestTagInfo"] = [=[Returns metadata for a quest.]=],
	["C_QuestLog.GetRequiredMoney"] = [=[Returns the amount of money required for quest completion.]=],
	["C_QuestLog.GetSelectedQuest"] = [=[Returns the quest specified by {{api|C_QuestLog.SetSelectedQuest}}.]=],
	["C_QuestLog.GetSuggestedGroupSize"] = [=[Returns the suggested number of players for a quest.]=],
	["C_QuestLog.IsPushableQuest"] = [=[True if the quest can be shared with other players.]=],
	["C_QuestLog.IsUnitOnQuest"] = [=[True if the unit is on the specified quest.]=],
	["C_QuestLog.RemoveQuestWatch"] = [=[Untracks a quest.]=],
	["C_QuestLog.RemoveWorldQuestWatch"] = [=[Untracks a world quest.]=],
	["C_QuestLog.SetAbandonQuest"] = [=[Sets the selected quest to be abandoned.]=],
	["C_QuestLog.SetSelectedQuest"] = [=[Selects a quest in the quest log.]=],
	["C_ReportSystem.OpenReportPlayerDialog"] = [=[Opens the dialog for reporting a player.]=],
	["C_Reputation.GetFactionParagonInfo"] = [=[Returns [[Emissary system|Paragon]] info on a faction.]=],
	["C_Reputation.IsFactionParagon"] = [=[True if a faction is a paragon reputation.]=],
	["C_Scenario.GetProvingGroundsInfo"] = [=[Returns info for the current [[Proving Grounds]] trial.]=],
	["C_SummonInfo.CancelSummon"] = [=[Declines a summon request.]=],
	["C_SummonInfo.ConfirmSummon"] = [=[Accepts a summon request.]=],
	["C_SummonInfo.GetSummonConfirmAreaName"] = [=[Returns the zone where you will be summoned to.]=],
	["C_SummonInfo.GetSummonConfirmSummoner"] = [=[Returns the name of the player summoning you.]=],
	["C_SummonInfo.GetSummonConfirmTimeLeft"] = [=[Returns the time left in seconds for accepting a summon.]=],
	["C_Timer.After"] = [=[Schedules a timer.]=],
	["C_ToyBox.GetToyLink"] = [=[Returns the item link for a toy.]=],
	["C_TradeSkillUI.GetAllRecipeIDs"] = [=[Returns all recipes for the current profession.]=],
	["C_TradeSkillUI.GetRecipeDescription"] = [=[Returns the description for a recipe.]=],
	["C_TradeSkillUI.GetRecipeItemLink"] = [=[Returns the result item link for a recipe.]=],
	["C_TradeSkillUI.GetRecipeNumItemsProduced"] = [=[Returns the number of items produced for a recipe.]=],
	["C_TradeSkillUI.GetRecipeTools"] = [=[Returns the required tools for a recipe.]=],
	["C_TradeSkillUI.GetTradeSkillLine"] = [=[Returns the current profession displayed in the trade skill window.]=],
	["C_TradeSkillUI.GetTradeSkillListLink"] = [=[Returns a link for the currently displayed profession.]=],
	["C_TradeSkillUI.IsNPCCrafting"] = [=[True if the trade skill window is displayed for an NPC.]=],
	["C_Transmog.ApplyAllPending"] = [=[Confirms all pending transmogs.]=],
	["C_Transmog.ClearPending"] = [=[Clears an equipment slot of pending transmogs.]=],
	["C_UI.Reload"] = [=[Reloads the User Interface.]=],
	["CallCompanion"] = [=[Summons a companion.]=],
	["CameraOrSelectOrMoveStop"] = [=[Called when you release the "Left-Click" mouse button.]=],
	["CameraZoomIn"] = [=[Zooms the camera in.]=],
	["CameraZoomOut"] = [=[Zooms the camera out.]=],
	["CanBeRaidTarget"] = [=[True if the unit can be marked with a raid target icon.]=],
	["CancelAreaSpiritHeal"] = [=[Cancels the Spirit Healer's resurrection in battlegrounds.]=],
	["CancelDuel"] = [=[Forfeits the current duel or declines a duel invitation.]=],
	["CancelItemTempEnchantment"] = [=[Removes temporary weapon enchants (e.g. Rogue poisons and sharpening stones).]=],
	["CancelPendingEquip"] = [=[Cancels a pending equip confirmation.]=],
	["CancelShapeshiftForm"] = [=[Cancels a shapeshift form.]=],
	["CancelTrade"] = [=[Declines the current trade offer.]=],
	["CancelUnitBuff"] = [=[Removes a specific buff from the character.]=],
	["CanEditMOTD"] = [=[True if the player can edit the guild message of the day.]=],
	["CanGuildDemote"] = [=[True if the player can demote guild members.]=],
	["CanGuildInvite"] = [=[True if the player can invite new members to the guild.]=],
	["CanGuildPromote"] = [=[True if the player can promote guild members.]=],
	["CanInspect"] = [=[True if the player can inspect the unit.]=],
	["CanJoinBattlefieldAsGroup"] = [=[True if the player can join a battlefield with a group.]=],
	["CanMerchantRepair"] = [=[True if the merchant can repair items.]=],
	["CanScanResearchSite"] = [=[True if the character is on a [[digsite]].]=],
	["CanShowResetInstances"] = [=[True if the character can currently reset their instances.]=],
	["CastSpell"] = [=[Casts a spell from the spellbook.]=],
	["CastSpellByName"] = [=[Casts a spell by name.]=],
	["ChangeActionBarPage"] = [=[Changes the current action bar page.]=],
	["ChangeChatColor"] = [=[Updates the color for a type of chat message.]=],
	["ChannelKick"] = [=[Kicks a player from the specified channel.]=],
	["ChannelUnban"] = [=[Unbans a player from the specified channel.]=],
	["CheckInbox"] = [=[Queries the server for mail.]=],
	["CheckInteractDistance"] = [=[True if the player is in range to perform a specific interaction with the unit.]=],
	["ClearCursor"] = [=[Clears any objects from the cursor.]=],
	["ClearFocus"] = [=[Clears the focus target.]=],
	["ClearOverrideBindings"] = [=[Removes all override bindings owned by a specific frame.]=],
	["ClearSendMail"] = [=[Clears the text and item attachments in the Send Mail tab.]=],
	["ClearTarget"] = [=[Clears the selected target.]=],
	["ClickSendMailItemButton"] = [=[Drops or picks up an item from the cursor to the Send Mail tab.]=],
	["CloseBankFrame"] = [=[Closes the bank window.]=],
	["CloseMail"] = [=[Closes the mail window.]=],
	["ClosePetition"] = [=[Closes the current petition.]=],
	["ClosePetStables"] = [=[Closes the pet stable window.]=],
	["CloseSocketInfo"] = [=[Cancels pending gems for socketing.]=],
	["CloseTaxiMap"] = [=[Closes the [[Flight Map]].]=],
	["CloseTrade"] = [=[Closes the trade window.]=],
	["CombatLogGetCurrentEventInfo"] = [=[Returns the current {{api|t=e|COMBAT_LOG_EVENT}} payload.]=],
	["CombatTextSetActiveUnit"] = [=[Changes the entity for which {{api|t=e|COMBAT_TEXT_UPDATE}} events fire.]=],
	["CompleteQuest"] = [=[Continues the quest dialog to the reward selection step.]=],
	["ConfirmAcceptQuest"] = [=[Accepts a quest started by a group member (e.g. escort quests).]=],
	["ConfirmLootRoll"] = [=[Confirms a loot roll.]=],
	["ConfirmLootSlot"] = [=[Confirms looting of a BoP item.]=],
	["ConfirmReadyCheck"] = [=[Responds to a ready check.]=],
	["CreateFont"] = [=[Creates a {{api|t=o|Font}} object.]=],
	["CreateFrame"] = [=[Creates a {{api|t=o|Frame}} object.]=],
	["CreateMacro"] = [=[Creates a macro.]=],
	["CursorCanGoInSlot"] = [=[True if the item held by the cursor can be equipped in the specified (equipment) inventory slot.]=],
	["CursorHasItem"] = [=[True if the cursor currently holds an item.]=],
	["debugprofilestart"] = [=[Starts a timer for profiling during debugging.]=],
	["debugprofilestop"] = [=[Returns the time in milliseconds since the last call to debugprofilestart().]=],
	["debugstack"] = [=[Returns a string representation of the current calling stack.]=],
	["DeclineGuild"] = [=[Declines a guild invite.]=],
	["DeclineResurrect"] = [=[Declines a resurrection offer.]=],
	["DeleteCursorItem"] = [=[Destroys the item held by the cursor.]=],
	["DeleteInboxItem"] = [=[Requests the server to remove a mailbox message.]=],
	["DescendStop"] = [=[Stops descending while flying or swimming.]=],
	["DisableAddOn"] = [=[Disables an addon for subsequent sessions.]=],
	["DismissCompanion"] = [=[Dismisses the current companion.]=],
	["Dismount"] = [=[Dismounts the character.]=],
	["DisplayChannelOwner"] = [=[Prints the name of the owner of the specified channel.]=],
	["DoEmote"] = [=[Performs an emote.]=],
	["DoReadyCheck"] = [=[Initiates a ready check.]=],
	["DropCursorMoney"] = [=[Drops money held by the cursor back into your bag.]=],
	["DropItemOnUnit"] = [=[Drops an item from the cursor onto a unit, i.e. to initiate a trade.]=],
	["EditMacro"] = [=[Modifies an existing macro.]=],
	["EnableAddOn"] = [=[Enables an addon for subsequent sessions.]=],
	["EnumerateFrames"] = [=[Returns the frame which follows the current frame.]=],
	["EnumerateServerChannels"] = [=[Returns all available server channels (zone dependent).]=],
	["ExpandQuestHeader"] = [=[Expands/collapses a quest log header.]=],
	["FactionToggleAtWar"] = [=[Toggles the [[At War]] status for a faction.]=],
	["FillLocalizedClassList"] = [=[Fills a table with localized (female) class names.]=],
	["FlipCameraYaw"] = [=[Rotates the camera around the Z-axis.]=],
	["FocusUnit"] = [=[Sets the [[focus target]].]=],
	["FollowUnit"] = [=[Follows a friendly player unit.]=],
	["forceinsecure"] = [=[Taints the current execution path.]=],
	["ForceQuit"] = [=[Instantly quits the game, ignoring the 20 seconds timer.]=],
	["GetAchievementCriteriaInfo"] = [=[Returns info for the specified achievement criteria.]=],
	["GetAchievementInfo"] = [=[Returns info for an achievement.]=],
	["GetAchievementLink"] = [=[Returns an achievement link.]=],
	["GetAchievementNumCriteria"] = [=[Returns the number of criteria for an achievement.]=],
	["GetActionBarPage"] = [=[Returns the current action bar page.]=],
	["GetActionBarToggles"] = [=[Returns the enabled states for the extra action bars.]=],
	["GetActionCooldown"] = [=[Returns cooldown info for the specified action slot.]=],
	["GetActionCount"] = [=[Returns the available number of uses for an action.]=],
	["GetActionInfo"] = [=[Returns info for an action.]=],
	["GetActionText"] = [=[Returns the label text for an action.]=],
	["GetActionTexture"] = [=[Returns the icon texture for an action.]=],
	["GetActiveArtifactByRace"] = [=[Returns the active Archaeology artifact for a race.]=],
	["GetAddOnCPUUsage"] = [=[Returns the total time used for an addon.]=],
	["GetAddOnDependencies"] = [=[Returns the TOC dependencies for an addon.]=],
	["GetAddOnMetadata"] = [=[Returns TOC metadata for an addon.]=],
	["GetArchaeologyInfo"] = [=[Returns the localized name for the Archaeology profession.]=],
	["GetArchaeologyRaceInfoByID"] = [=[Returns info for an Archaeology race.]=],
	["GetAreaSpiritHealerTime"] = [=[Returns the time left in seconds until the next Spirit Healer resurrection in battlegrounds.]=],
	["GetArtifactProgress"] = [=[Returns progress info for the selected Archaeology artifact.]=],
	["GetAttackPowerForStat"] = [=[Returns the amount of attack power contributed by a specific amount of a stat.]=],
	["GetAutoDeclineGuildInvites"] = [=[True if guild invites are being automatically declined.]=],
	["GetAutoQuestPopUp"] = [=[Returns info for a popup quest notification.]=],
	["GetAvailableQuestInfo"] = [=[Returns info for an available quest.]=],
	["GetAverageItemLevel"] = [=[Returns the character's average item level.]=],
	["GetBagName"] = [=[Returns the item name of the specified player bag.]=],
	["GetBankSlotCost"] = [=[Returns the cost of the next bank bag slot.]=],
	["GetBattlefieldEstimatedWaitTime"] = [=[Returns the estimated queue time to enter the battlefield.]=],
	["GetBattlefieldInstanceRunTime"] = [=[Returns the time passed since the battlefield started.]=],
	["GetBattlefieldPortExpiration"] = [=[Returns the remaining seconds before the battlefield port expires.]=],
	["GetBattlefieldScore"] = [=[Returns info for a player's score in battlefields.]=],
	["GetBattlefieldStatData"] = [=[Returns battlefield-specific info for a player (e.g. Warsong Gulch flag captures).]=],
	["GetBattlefieldStatus"] = [=[Returns the status of the battlefield the player is either queued for or inside.]=],
	["GetBattlefieldTeamInfo"] = [=[Returns info for an Arena team at the end of the match.]=],
	["GetBattlefieldTimeWaited"] = [=[Returns the time the player has waited in the queue.]=],
	["GetBattlefieldWinner"] = [=[Returns the winner of the battlefield.]=],
	["GetBestRFChoice"] = [=[Returns the suggested raid for the Raid Finder.]=],
	["GetBillingTimeRested"] = [=[Returns the amount of "healthy" time left for players on Chinese realms.]=],
	["GetBinding"] = [=[Returns the name and keys for a binding by index.]=],
	["GetBindingAction"] = [=[Returns the binding name for a key (combination).]=],
	["GetBindingKey"] = [=[[Returns the binding name for a key (combination). Discards key modifiers until it finds a binding.]=],
	["GetBindingText"] = [=[Returns the string for the given key and prefix. Essentially a specialized getglobal() for bindings.]=],
	["GetBindLocation"] = [=[Returns the subzone the character's Hearthstone is set to.]=],
	["GetBlockChance"] = [=[Returns the block chance percentage.]=],
	["GetBonusBarOffset"] = [=[Returns the current bonus action bar index (e.g. for the Rogue stealth bar).]=],
	["GetBuildInfo"] = [=[Returns info for the current client build.]=],
	["GetBuybackItemInfo"] = [=[Returns info for an item that can be bought back from a merchant.]=],
	["GetCameraZoom"] = [=[Returns the current zoom level of the camera.]=],
	["GetCategoryInfo"] = [=[Returns info for an achievement category.]=],
	["GetCategoryList"] = [=[Returns the list of achievement categories.]=],
	["GetCategoryNumAchievements"] = [=[Returns the number of achievements for a category.]=],
	["GetChannelDisplayInfo"] = [=[Returns info for chat channels and headers in the Chat Pane.]=],
	["GetChannelList"] = [=[Returns the list of joined chat channels.]=],
	["GetChannelName"] = [=[Returns info for a chat channel.]=],
	["GetChatTypeIndex"] = [=[Returns the index for a chat type.]=],
	["GetChatWindowChannels"] = [=[Returns subscribed channels for a chat window.]=],
	["GetChatWindowInfo"] = [=[Returns info for a chat window.]=],
	["GetChatWindowMessages"] = [=[Returns subscribed message types for a chat window.]=],
	["GetCoinText"] = [=[Breaks up an amount of money into gold/silver/copper.]=],
	["GetCoinTextureString"] = [=[Breaks up an amount of money into gold/silver/copper with icons.]=],
	["GetCombatRating"] = [=[Returns a specific combat rating.]=],
	["GetCombatRatingBonus"] = [=[Returns the bonus percentage for a specific combat rating.]=],
	["GetComboPoints"] = [=[Returns the amount of current combo points.]=],
	["GetCompanionInfo"] = [=[Returns info for a companion.]=],
	["GetComparisonStatistic"] = [=[Returns the specified statistic from the comparison player unit.]=],
	["GetContainerItemDurability"] = [=[Returns the durability of an item in a container slot.]=],
	["GetContainerItemID"] = [=[Returns the item ID in a container slot.]=],
	["GetContainerItemInfo"] = [=[Returns info for an item in a container slot.]=],
	["GetContainerItemQuestInfo"] = [=[Returns info for a quest item in a container slot.]=],
	["GetContainerNumFreeSlots"] = [=[Returns the number of free slots in a bag.]=],
	["GetCritChance"] = [=[Returns the melee critical hit chance percentage.]=],
	["GetCurrentArenaSeason"] = [=[Returns the current arena season.]=],
	["GetCurrentBindingSet"] = [=[Returns if either account or character-specific bindings are active.]=],
	["GetCurrentResolution"] = [=[Returns the index of the current screen resolution.]=],
	["GetCurrentTitle"] = [=[Returns the current [[title]].]=],
	["GetCursorInfo"] = [=[Returns what the mouse cursor is holding.]=],
	["GetCursorMoney"] = [=[Returns the amount of money held by the cursor.]=],
	["GetDefaultLanguage"] = [=[Returns the character's default language.]=],
	["GetDetailedItemLevelInfo"] = [=[Returns detailed item level info.]=],
	["GetDodgeChance"] = [=[Returns the dodge chance percentage.]=],
	["GetDungeonDifficultyID"] = [=[Returns the selected dungeon difficulty.]=],
	["GetFactionInfo"] = [=[Returns info for a faction.]=],
	["GetFileIDFromPath"] = [=[Returns the FileID for an Interface file path.]=],
	["GetFilteredAchievementID"] = [=[Returns the ID of a filtered achievement by index.]=],
	["GetFonts"] = [=[Returns a list of available fonts.]=],
	["GetFrameCPUUsage"] = [=[Returns the total time used by and number of calls of a frame's event handlers.]=],
	["GetFramerate"] = [=[Returns the current framerate.]=],
	["GetFramesRegisteredForEvent"] = [=[Returns all frames registered for the specified event, in dispatch order.]=],
	["GetFriendshipReputation"] = [=[Returns info for a friendship reputation.]=],
	["GetFriendshipReputationRanks"] = [=[Returns the (max) rank for a friendship reputation.]=],
	["GetGuildBankItemInfo"] = [=[Returns item info for a guild bank slot.]=],
	["GetGuildBankItemLink"] = [=[Returns the item link for a guild bank slot.]=],
	["GetGuildBankMoney"] = [=[Returns the amount of money in the guild bank.]=],
	["GetGuildBankMoneyTransaction"] = [=[Returns info for a money transaction from the guild bank.]=],
	["GetGuildBankTabInfo"] = [=[Returns info for a guild bank tab.]=],
	["GetGuildBankTransaction"] = [=[Returns info for an item transaction from the guild bank.]=],
	["GetGuildInfo"] = [=[Returns guild info for a player unit.]=],
	["GetGuildRosterInfo"] = [=[Returns info for a guild member.]=],
	["GetGuildRosterLastOnline"] = [=[Returns time since the guild member was last online.]=],
	["GetGuildRosterMOTD"] = [=[Returns the guild message of the day.]=],
	["GetGuildRosterSelection"] = [=[Returns the index of the selected guild member in the roster.]=],
	["GetGuildRosterShowOffline"] = [=[True if the guild roster is showing offline members.]=],
	["GetGuildTradeSkillInfo"] = [=[Returns info for a profession in the guild roster.]=],
	["GetInboxHeaderInfo"] = [=[Returns info for a message in the mailbox.]=],
	["GetInboxInvoiceInfo"] = [=[Returns info for an auction house invoice.]=],
	["GetInboxItem"] = [=[Returns info for an item attached to a message in the mailbox.]=],
	["GetInboxItemLink"] = [=[Returns the item link of an item attached to a message in the mailbox.]=],
	["GetInboxNumItems"] = [=[Returns the number of messages in the mailbox.]=],
	["GetInboxText"] = [=[Returns the text of a message in the mailbox.]=],
	["GetInspectHonorData"] = [=[Returns honor info for the inspected player unit.]=],
	["GetInspectSpecialization"] = [=[Returns the specialization for the inspected player unit.]=],
	["GetInstanceInfo"] = [=[Returns info for the map instance the character is currently in.]=],
	["GetInstanceLockTimeRemaining"] = [=[Returns info for the instance lock timer for the current instance.]=],
	["GetInventoryAlertStatus"] = [=[Returns the durability status of an equipped item.]=],
	["GetInventoryItemBroken"] = [=[True if an inventory item has zero durability.]=],
	["GetInventoryItemDurability"] = [=[Returns the durability of an equipped item.]=],
	["GetInventoryItemID"] = [=[Returns the item ID for an equipped item.]=],
	["GetInventoryItemLink"] = [=[Returns the item link for an equipped item.]=],
	["GetInventoryItemQuality"] = [=[Returns the quality of an equipped item.]=],
	["GetInventoryItemTexture"] = [=[Returns the texture for an equipped item.]=],
	["GetInventorySlotInfo"] = [=[Returns info for an equipment slot.]=],
	["GetItemCooldown"] = [=[Returns cooldown info for an item ID.]=],
	["GetItemCount"] = [=[Returns the number (or available charges) of an item in the inventory.]=],
	["GetItemFamily"] = [=[Returns the bag type that an item can go into, or for bags the type of items that it can contain.]=],
	["GetItemIcon"] = [=[Returns the icon texture for an item.]=],
	["GetItemInfo"] = [=[Returns info for an item.]=],
	["GetItemInfoInstant"] = [=[Returns readily available info for an item.]=],
	["GetItemQualityColor"] = [=[Returns the color for an item quality.]=],
	["GetItemSpell"] = [=[Returns the spell effect for an item.]=],
	["GetLanguageByIndex"] = [=[Returns the languages that the character can speak by index.]=],
	["GetLatestThreeSenders"] = [=[Returns up to three senders of unread mail.]=],
	["GetLFGBootProposal"] = [=[Returns info for a LFG votekick in progress.]=],
	["GetLFGDungeonInfo"] = [=[Returns info for a LFG dungeon.]=],
	["GetLFGDungeonRewardCapBarInfo"] = [=[Returns the weekly limits reward for a currency (e.g. Valor Point Cap).]=],
	["GetLFGQueueStats"] = [=[Returns info for the current LFG queue.]=],
	["GetLFGRoles"] = [=[Returns the roles the player signed up for in the Dungeon Finder.]=],
	["GetLFGRoleShortageRewards"] = [=[Returns info for the LFG [[Call_to_Arms_(dungeon)|Call to Arms]] rewards.]=],
	["GetLocale"] = [=[Returns the game client locale.]=],
	["GetLootMethod"] = [=[Returns the current loot method.]=],
	["GetLootSlotInfo"] = [=[Returns info for a loot slot.]=],
	["GetLootSlotLink"] = [=[Returns the item link for a loot slot.]=],
	["GetLootThreshold"] = [=[Returns the loot threshold quality for e.g. master loot.]=],
	["GetMacroIndexByName"] = [=[Returns the index for a macro by name.]=],
	["GetMacroInfo"] = [=[Returns info for a macro.]=],
	["GetManaRegen"] = [=[Returns the mana regeneration per second.]=],
	["GetMasterLootCandidate"] = [=[Returns the name of an eligible player for receiving master loot by index.]=],
	["GetMastery"] = [=[Returns the base mastery percentage.]=],
	["GetMasteryEffect"] = [=[Returns the effective mastery percentage.]=],
	["GetMerchantItemCostItem"] = [=[Returns info for the currency cost for a merchant item.]=],
	["GetMerchantItemInfo"] = [=[Returns info for a merchant item.]=],
	["GetMerchantItemLink"] = [=[Returns the item link for a merchant item.]=],
	["GetMerchantItemMaxStack"] = [=[Returns the maximum stack size for a merchant item.]=],
	["GetMerchantNumItems"] = [=[Returns the number of different items a merchant sells.]=],
	["GetMinimapZoneText"] = [=[Returns the zone text that is displayed over the minimap.]=],
	["GetMirrorTimerInfo"] = [=[Returns info for the mirror timer, e.g. fatigue, breath and feign death.]=],
	["GetMirrorTimerProgress"] = [=[Returns the current value of the mirror timer.]=],
	["GetMoney"] = [=[Returns the amount of money the player character owns.]=],
	["GetMouseButtonClicked"] = [=[Returns the mouse button responsible during an OnClick event (e.g. "RightButton").]=],
	["GetMouseFocus"] = [=[Returns the frame that currently has mouse focus.]=],
	["GetMultiCastTotemSpells"] = [=[Returns a list of valid spells for a totem bar slot.]=],
	["GetNetStats"] = [=[Returns bandwidth and latency network information.]=],
	["GetNextAchievement"] = [=[Returns the next achievement in a chain.]=],
	["GetNumActiveQuests"] = [=[Returns the number of quests which can be turned in at a non-gossip quest giver.]=],
	["GetNumArchaeologyRaces"] = [=[Returns the number of Archaeology races in the game.]=],
	["GetNumAutoQuestPopUps"] = [=[Returns the number of displayed popup quest notifications.]=],
	["GetNumAvailableQuests"] = [=[Returns the number of available quests at a non-gossip quest giver.]=],
	["GetNumBankSlots"] = [=[Returns the number of purchased bank bag slots.]=],
	["GetNumBattlefieldScores"] = [=[Returns the number of players listed in the battlefield scoreboard.]=],
	["GetNumBindings"] = [=[Returns the number of bindings and headers in the key bindings window.]=],
	["GetNumClasses"] = [=[Returns the number of player classes in the game.]=],
	["GetNumCompanions"] = [=[Returns the number of mounts.]=],
	["GetNumCompletedAchievements"] = [=[Returns the total and completed number of achievements.]=],
	["GetNumFilteredAchievements"] = [=[Returns the number of achievements after filtering.]=],
	["GetNumGroupMembers"] = [=[Returns the number of players in the group.]=],
	["GetNumGuildMembers"] = [=[Returns the number of total and online guild members.]=],
	["GetNumLootItems"] = [=[Returns the number of items in the loot window.]=],
	["GetNumMacros"] = [=[Returns the number of account and character macros.]=],
	["GetNumPetitionNames"] = [=[Returns the number of signatures on the current petition.]=],
	["GetNumQuestChoices"] = [=[Returns the number of available rewards for the current quest.]=],
	["GetNumQuestItems"] = [=[Returns the number of required items to complete the current quest.]=],
	["GetNumQuestLeaderBoards"] = [=[Returns the number of objectives for a quest.]=],
	["GetNumQuestLogRewards"] = [=[Returns the number of unconditional rewards for the current quest in the quest log.]=],
	["GetNumQuestRewards"] = [=[Returns the number of unconditional rewards at a quest giver.]=],
	["GetNumSavedInstances"] = [=[Returns the number of instances for which the character is locked out.]=],
	["GetNumSockets"] = [=[Returns the number of sockets for an item in the socketing window.]=],
	["GetNumSpellTabs"] = [=[Returns the number of tabs in the spellbook.]=],
	["GetNumSubgroupMembers"] = [=[Returns the number of other players in the party or raid subgroup.]=],
	["GetNumTitles"] = [=[Returns the number of titles, specifically the highest title ID.]=],
	["GetNumTrackedAchievements"] = [=[Returns the number of tracked achievements.]=],
	["GetNumTrackingTypes"] = [=[Returns the number of available tracking types for the minimap.]=],
	["GetNumTrainerServices"] = [=[Returns the number of trainer services.]=],
	["GetOptOutOfLoot"] = [=[True if the player is automatically passing on all loot.]=],
	["GetParryChance"] = [=[Returns the parry chance percentage.]=],
	["GetPartyAssignment"] = [=[True if a group member is assigned the main tank/assist role.]=],
	["GetPetActionCooldown"] = [=[Returns cooldown info for an action on the pet action bar.]=],
	["GetPetActionInfo"] = [=[Returns info for an action on the pet action bar.]=],
	["GetPetExperience"] = [=[Returns the pet's current and total XP required for the next level.]=],
	["GetPetFoodTypes"] = [=[Returns the food types the pet can eat.]=],
	["GetPetitionInfo"] = [=[Returns info for the petition being viewed.]=],
	["GetPlayerFacing"] = [=[Returns the direction the character is facing in radians.]=],
	["GetPlayerInfoByGUID"] = [=[Returns character info for another player from their GUID.]=],
	["GetPlayerTradeMoney"] = [=[Returns the amount of money the player has in the trade window.]=],
	["GetPossessInfo"] = [=[Returns info for an action on the possession bar.]=],
	["GetPreviousAchievement"] = [=[Returns the previous achievement in a chain.]=],
	["GetProfessions"] = [=[Returns the spell tab indices of the character's current professions.]=],
	["GetProgressText"] = [=[Returns quest progress text at a quest giver.]=],
	["GetPVPLifetimeStats"] = [=[Returns the character's lifetime PvP statistics.]=],
	["GetPVPSessionStats"] = [=[Returns the character's Honor statistics for this session.]=],
	["GetPVPTimer"] = [=[Returns the time left in milliseconds until the player is unflagged for PvP.]=],
	["GetPVPYesterdayStats"] = [=[Returns the character's Honor statistics for yesterday.]=],
	["GetQuestBackgroundMaterial"] = [=[Returns the background texture for the displayed quest.]=],
	["GetQuestID"] = [=[Returns the ID of the displayed quest at a quest giver.]=],
	["GetQuestItemInfo"] = [=[Returns info for a required/reward/choice quest item.]=],
	["GetQuestItemLink"] = [=[Returns the item link for a required/reward/choice quest item.]=],
	["GetQuestLogLeaderBoard"] = [=[Returns info for a quest objective in the quest log.]=],
	["GetQuestLogQuestText"] = [=[Returns the description and objective text in the quest log.]=],
	["GetQuestLogRewardInfo"] = [=[Returns info for an unconditional quest reward item in the quest log.]=],
	["GetQuestLogRewardMoney"] = [=[Returns the amount of money rewarded for a quest.]=],
	["GetQuestLogRewardSpell"] = [=[Returns the spell reward for a quest.]=],
	["GetQuestLogTimeLeft"] = [=[Returns the time left in seconds for the current quest.]=],
	["GetQuestResetTime"] = [=[Returns the number of seconds until daily quests reset.]=],
	["GetQuestReward"] = [=[Completes the quest and chooses a quest reward, if applicable.]=],
	["GetRaidDifficultyID"] = [=[Returns the player's currently selected raid difficulty.]=],
	["GetRaidRosterInfo"] = [=[Returns info for a member of your raid.]=],
	["GetRaidTargetIndex"] = [=[Returns the [[Target marker|raid target]] of a unit.]=],
	["GetRangedCritChance"] = [=[Returns the ranged critical hit chance.]=],
	["GetRealmName"] = [=[Returns the realm name.]=],
	["GetRealZoneText"] = [=[Returns the map instance name.]=],
	["GetRestrictedAccountData"] = [=[Returns the cap on trial character level, money and profession skill.]=],
	["GetRestState"] = [=[Returns if the character is in a [[Rest|rested]] or normal state.]=],
	["GetRewardSpell"] = [=[Returns the spell reward for the quest in the gossip window.]=],
	["GetRewardXP"] = [=[Returns the [[experience]] reward for the quest in the gossip window.]=],
	["GetRuneCooldown"] = [=[Returns the Death Knight's cooldown info for the specified rune.]=],
	["GetRuneCount"] = [=[Returns the Death Knight's number of runes for a slot.]=],
	["GetSavedInstanceInfo"] = [=[Returns instance lock info.]=],
	["GetScreenHeight"] = [=[Returns the height of the window in pixels, affected by UI scale.]=],
	["GetScreenWidth"] = [=[Returns the width of the window in pixels, affected by UI scale.]=],
	["GetSelectedArtifactInfo"] = [=[Returns info for the selected race's Archaeology artifact.]=],
	["GetSendMailCOD"] = [=[Returns the Cash-On-Delivery cost of the outgoing message.]=],
	["GetSendMailItem"] = [=[Returns info for an item attached in the outgoing message.]=],
	["GetSendMailItemLink"] = [=[Returns the item link of an item attached in the outgoing message.]=],
	["GetServerTime"] = [=[Returns the server's [[Wikipedia:Unix_time|Unix time]].]=],
	["GetShapeshiftFormID"] = [=[Returns the ID of the form or stance the player is currently in.]=],
	["GetShapeshiftFormInfo"] = [=[Returns info for an available form or stance.]=],
	["GetSheathState"] = [=[Returns which type of weapon the player currently has unsheathed.]=],
	["GetSocketItemBoundTradeable"] = [=[True if the item currently being socketed can be traded to other eligible players (BoP boss loot).]=],
	["GetSocketItemInfo"] = [=[Returns info for the item currently being socketed.]=],
	["GetSocketItemRefundable"] = [=[Returns whether the item currently being socketed is refundable.]=],
	["GetSocketTypes"] = [=[Returns the type (color) of a socket in the item.]=],
	["GetSpecializationInfo"] = [=[Returns info for a specialization.]=],
	["GetSpecializationMasterySpells"] = [=[Returns the mastery spell ID of the specified specialization.]=],
	["GetSpecializationSpells"] = [=[Returns the spells learned as part of the specified specialization.]=],
	["GetSpellAutocast"] = [=[True if a (pet) spell is autocastable.]=],
	["GetSpellBonusDamage"] = [=[Returns the raw spell damage bonus for the specified spell tree.]=],
	["GetSpellBonusHealing"] = [=[Returns the raw spell healing bonus.]=],
	["GetSpellBookItemInfo"] = [=[Returns info for a [[spellbook]] item.]=],
	["GetSpellBookItemName"] = [=[Returns the name of a [[spellbook]] item.]=],
	["GetSpellBookItemTexture"] = [=[Returns the icon texture of a spellbook item.]=],
	["GetSpellCooldown"] = [=[Returns the cooldown info of a spell.]=],
	["GetSpellCritChance"] = [=[Returns the critical hit chance for the specified spell school.]=],
	["GetSpellLink"] = [=[Returns the hyperlink for a spell.]=],
	["GetSpellPowerCost"] = [=[Returns resource cost info for a spell.]=],
	["GetSpellTabInfo"] = [=[Returns info for the specified spellbook tab.]=],
	["GetSpellTexture"] = [=[Returns the icon texture of a spell.]=],
	["GetStablePetFoodTypes"] = [=[Returns the food types the specified stabled pet can eat.]=],
	["GetStatistic"] = [=[Returns a character statistic.]=],
	["GetStatisticsCategoryList"] = [=[Returns the list of statistic categories.]=],
	["GetSubZoneText"] = [=[Returns the subzone name.]=],
	["GetSummonFriendCooldown"] = [=[Returns the cooldown info of the RaF Summon Friend ability.]=],
	["GetTalentInfo"] = [=[Returns info for the specified talent.]=],
	["GetTargetTradeMoney"] = [=[Returns the amount of money in the trade window for the other player.]=],
	["GetText"] = [=[Returns localized text depending on the specified gender.]=],
	["GetThreatStatusColor"] = [=[Returns the color for a threat status.]=],
	["GetTime"] = [=[Returns the system uptime of your computer in seconds, with millisecond precision.]=],
	["GetTitleName"] = [=[Returns the name of a player title.]=],
	["GetTitleText"] = [=[Returns the name of the quest at the quest giver.]=],
	["GetTotalAchievementPoints"] = [=[Returns the total number of achievement points earned.]=],
	["GetTotemInfo"] = [=[Returns info for the specified totem.]=],
	["GetTrackedAchievements"] = [=[Returns the currently tracked achievements.]=],
	["GetTrackingInfo"] = [=[Returns tracking info by index.]=],
	["GetTradePlayerItemLink"] = [=[Returns the item link for an item in the trade window.]=],
	["GetTradeTargetItemInfo"] = [=[Returns item info for the other player in the trade window.]=],
	["GetTradeTargetItemLink"] = [=[Returns the item link for an item from the other player in the trade window.]=],
	["GetTrainerGreetingText"] = [=[Returns the trainer's greeting text.]=],
	["GetTrainerSelectionIndex"] = [=[Returns the index of the selected trainer service.]=],
	["GetTrainerServiceAbilityReq"] = [=[Returns the name of a requirement for training a skill and if the player meets the requirement.]=],
	["GetTrainerServiceCost"] = [=[Returns the cost of the specified trainer service.]=],
	["GetTrainerServiceIcon"] = [=[Returns the icon texture for a specific trainer service.]=],
	["GetTrainerServiceLevelReq"] = [=[Returns the required level to learn a skill from the trainer.]=],
	["GetTrainerServiceSkillReq"] = [=[Returns the name of the required skill and the amount needed in that skill.]=],
	["GetUnitSpeed"] = [=[Returns the movement speed of the unit.]=],
	["GetVoidItemInfo"] = [=[Returns info for a Void Storage slot.]=],
	["GetVoidTransferDepositInfo"] = [=[Returns info for the item being deposited into the Void Storage.]=],
	["GetVoidTransferWithdrawalInfo"] = [=[Returns info for the item being withdrawn from the Void Storage.]=],
	["GetWatchedFactionInfo"] = [=[Returns info for the currently watched faction.]=],
	["GetWeaponEnchantInfo"] = [=[Returns info for temporary weapon enchantments (e.g. sharpening stones).]=],
	["GetWorldPVPAreaInfo"] = [=[Returns info for a world PvP zone (e.g. Wintergrasp or Tol Barad).]=],
	["GetXPExhaustion"] = [=[Returns the amount of current rested XP for the character.]=],
	["GetZoneText"] = [=[Returns the name of the zone the player is in.]=],
	["GuildControlDelRank"] = [=[Deletes a guild rank.]=],
	["GuildControlGetRankName"] = [=[Returns a guild rank name by index.]=],
	["GuildControlSaveRank"] = [=[Saves the current rank name.]=],
	["GuildControlSetRank"] = [=[Selects a guild rank.]=],
	["GuildControlSetRankFlag"] = [=[Sets guild rank permissions.]=],
	["GuildDemote"] = [=[Demotes the specified player in the guild.]=],
	["GuildDisband"] = [=[Disbands the guild; no warning is given.]=],
	["GuildInfo"] = [=[Prints info for the guild the player belongs to.]=],
	["GuildInvite"] = [=[Invites a player to the guild.]=],
	["GuildPromote"] = [=[Promotes the specified player in the guild.]=],
	["GuildRosterSetOfficerNote"] = [=[Sets the officer note of a guild member.]=],
	["GuildRosterSetPublicNote"] = [=[Sets the public note of a guild member.]=],
	["GuildSetLeader"] = [=[Transfers guild leadership to another player.]=],
	["GuildSetMOTD"] = [=[Sets the guild message of the day.]=],
	["GuildUninvite"] = [=[Removes a player from the guild.]=],
	["HasAction"] = [=[True if an action slot is occupied.]=],
	["HasPetSpells"] = [=[Returns the number of available abilities for the player's combat pet.]=],
	["HasPetUI"] = [=[True if the player currently has an active (hunter) pet out.]=],
	["HasWandEquipped"] = [=[True if a wand is equipped.]=],
	["HideRepairCursor"] = [=[Takes the cursor out of repair mode.]=],
	["hooksecurefunc"] = [=[Securely posthooks the specified function. The hook will be called with the same arguments after the original call is performed.]=],
	["InboxItemCanDelete"] = [=[True if a message can be deleted, false if it can be returned to sender.]=],
	["InCombatLockdown"] = [=[True if the combat lockdown restrictions are active.]=],
	["InitiateTrade"] = [=[Opens a trade with the specified unit.]=],
	["InRepairMode"] = [=[True if the cursor is in repair mode.]=],
	["IsActionInRange"] = [=[True if the specified action is in range.]=],
	["IsActiveBattlefieldArena"] = [=[True if the player is inside a (rated) arena.]=],
	["IsAddOnLoaded"] = [=[True if the specified addon is loaded.]=],
	["IsAddOnLoadOnDemand"] = [=[True if the specified addon is load-on-demand.]=],
	["IsAttackAction"] = [=[True if an action is the "Auto Attack" action.]=],
	["IsAttackSpell"] = [=[True if a spellbook item is the "Auto Attack" spell.]=],
	["IsAutoRepeatAction"] = [=[True if an action is currently auto-repeating (e.g. Shoot for wand and Auto Shot for Hunters).]=],
	["IsConsumableAction"] = [=[True if an action is a consumable, i.e. it has a count.]=],
	["IsCurrentAction"] = [=[True if the specified action is currently being used.]=],
	["IsCurrentSpell"] = [=[True if the specified spell ID is currently being casted or queued.]=],
	["IsEquippableItem"] = [=[True if an item is equipable by the player.]=],
	["IsEquippedAction"] = [=[True if the specified action slot is an equipped item.]=],
	["IsEquippedItemType"] = [=[True if an item of a given type is equipped.]=],
	["IsFactionInactive"] = [=[True if the specified faction is marked inactive.]=],
	["IsFalling"] = [=[True if the character is currently falling.]=],
	["IsFlyableArea"] = [=[True if the current zone is a flyable area.]=],
	["IsFlying"] = [=[True if the character is currently on a flying mount.]=],
	["IsGuildLeader"] = [=[True if the player is the guild master.]=],
	["IsIndoors"] = [=[True if the character is currently indoors.]=],
	["IsInGroup"] = [=[True if the player is in a group.]=],
	["IsInInstance"] = [=[Returns true if the player is in an instance, and the type of instance.]=],
	["IsInRaid"] = [=[True if the player is in a raid.]=],
	["IsLinuxClient"] = [=[True if on a Linux client.]=],
	["IsMacClient"] = [=[True if on a Mac client.]=],
	["IsModifiedClick"] = [=[True if the modifier key needed for an an action is pressed.]=],
	["IsModifierKeyDown"] = [=[True if any modifier key is currently pressed.]=],
	["IsMounted"] = [=[True if the character is currently mounted.]=],
	["IsMouselooking"] = [=[True if the player is currently in mouselook mode.]=],
	["IsMoviePlayable"] = [=[True if the specified movie exists and can be played.]=],
	["IsOutdoors"] = [=[True if the character is currently outdoors.]=],
	["IsOutOfBounds"] = [=[True if the player is currently outside of map boundaries.]=],
	["IsPassiveSpell"] = [=[True if the specified spell is a passive ability.]=],
	["IsPetAttackActive"] = [=[True if the pet is currently auto attacking.]=],
	["IsQuestCompletable"] = [=[True if the displayed quest at a quest giver can be completed.]=],
	["IsResting"] = [=[True if the character is currently resting.]=],
	["issecure"] = [=[True if the current execution path is secure.]=],
	["issecurevariable"] = [=[True if the specified variable is secure.]=],
	["IsSpellInRange"] = [=[True if the player is in range to use the specified spell on the target unit.]=],
	["IsSpellOverlayed"] = [=[True if the specified spell currently has a proc / spell activation alert (glowing border).]=],
	["IsStealthed"] = [=[True if the character is currently stealthed.]=],
	["IsSwimming"] = [=[True if the character is currently swimming.]=],
	["IsTalentSpell"] = [=[True if the specified spell is learned from a talent.]=],
	["IsThreatWarningEnabled"] = [=[True if threat warnings are currently enabled.]=],
	["IsTitleKnown"] = [=[True if the character can use a player title.]=],
	["IsTradeskillTrainer"] = [=[True if the training window is used for a profession trainer.]=],
	["IsUsableAction"] = [=[True if the character can currently use the specified action (sufficient mana, reagents and not on cooldown).]=],
	["IsWindowsClient"] = [=[True if on a Windows client.]=],
	["ItemTextGetCreator"] = [=[Returns the name of the character who created the item text.]=],
	["ItemTextGetItem"] = [=[Returns the item name that the item text belongs to.]=],
	["ItemTextGetMaterial"] = [=[Returns the material texture for the item text.]=],
	["ItemTextGetPage"] = [=[Returns the page number of the currently displayed page.]=],
	["ItemTextGetText"] = [=[Returns the contents of the currently displayed page.]=],
	["ItemTextHasNextPage"] = [=[True if there is a page after the current page.]=],
	["ItemTextNextPage"] = [=[Moves to the next page of the item text.]=],
	["ItemTextPrevPage"] = [=[Moves to the previous page of the item text.]=],
	["JoinBattlefield"] = [=[Joins the battleground queue solo or as a group.]=],
	["JoinChannelByName"] = [=[Joins the specified chat channel.]=],
	["JoinPermanentChannel"] = [=[Joins the specified chat channel; the channel will be rejoined after relogging.]=],
	["JoinTemporaryChannel"] = [=[Joins the specified chat channel; the channel will be left on logout.]=],
	["JumpOrAscendStart"] = [=[Makes the character jump or swim/fly upwards.]=],
	["LeaveBattlefield"] = [=[Leaves the current battleground.]=],
	["LFGTeleport"] = [=[Teleports the player to or from a LFG dungeon.]=],
	["ListChannelByName"] = [=[Prints the list of members in the specified channel.]=],
	["ListChannels"] = [=[Prints the list of currently joined chat channel.]=],
	["LoadAddOn"] = [=[Loads the specified LoadOnDemand addon.]=],
	["LoadBindings"] = [=[Loads default, account or character specific key bindings.]=],
	["LoggingChat"] = [=[Gets or sets whether logging chat to Logs\WoWChatLog.txt is enabled.]=],
	["LoggingCombat"] = [=[Gets or sets whether logging combat to Logs\WoWCombatLog.txt is enabled.]=],
	["Logout"] = [=[Logs the player out of the game.]=],
	["LootSlot"] = [=[Loots the specified slot; can require confirmation with [[API ConfirmLootSlot|ConfirmLootSlot]].]=],
	["MouselookStart"] = [=[Enters mouse look mode; alters the character's movement/facing direction.]=],
	["MouselookStop"] = [=[Exits mouse look mode.]=],
	["MoveViewDownStart"] = [=[Starts rotating the camera downward.]=],
	["MoveViewDownStop"] = [=[Stops rotating the camera downward.]=],
	["MoveViewInStop"] = [=[Stops zooming the camera in.]=],
	["MoveViewLeftStart"] = [=[Starts rotating the camera to the left.]=],
	["MoveViewLeftStop"] = [=[Stops rotating the camera to the left.]=],
	["MoveViewOutStop"] = [=[Stops zooming the camera out.]=],
	["MoveViewRightStart"] = [=[Starts rotating the camera to the right.]=],
	["MoveViewRightStop"] = [=[Stops rotating the camera to the right.]=],
	["MoveViewUpStart"] = [=[Starts rotating the camera upward.]=],
	["MoveViewUpStop"] = [=[Stops rotating the camera upward.]=],
	["NeutralPlayerSelectFaction"] = [=[Allows a Pandaren to choose a faction.]=],
	["NoPlayTime"] = [=[True if the account is considered "unhealthy" for players on Chinese realms.]=],
	["NotifyInspect"] = [=[Requests another player's inventory and talent info before inspecting.]=],
	["NumTaxiNodes"] = [=[Returns the number of flight paths on the taxi map.]=],
	["OfferPetition"] = [=[Offers a petition to your target.]=],
	["PartialPlayTime"] = [=[True if the account is considered "tired" for players on Chinese realms.]=],
	["PetAssistMode"] = [=[Set your pet to Assist mode.]=],
	["PetCanBeAbandoned"] = [=[True if the pet can be abandoned.]=],
	["PetCanBeRenamed"] = [=[True if the pet can be renamed.]=],
	["PetRename"] = [=[Renames your pet.]=],
	["PetStopAttack"] = [=[Stops the pet from attacking.]=],
	["PickupAction"] = [=[Places an action onto the cursor.]=],
	["PickupCompanion"] = [=[Places a mount onto the cursor.]=],
	["PickupInventoryItem"] = [=[Picks up / interacts with an equipment slot.]=],
	["PickupMacro"] = [=[Places a macro onto the cursor.]=],
	["PickupMerchantItem"] = [=[Places a merchant item onto the cursor. If the cursor already has an item, it will be sold.]=],
	["PickupPetAction"] = [=[Places a pet action onto the cursor.]=],
	["PickupPlayerMoney"] = [=[Picks up an amount of money from the player onto the cursor.]=],
	["PickupSpell"] = [=[Places a spell onto the cursor.]=],
	["PickupTradeMoney"] = [=[Places an amount of money from the player's trade offer onto the cursor.]=],
	["PlaceAction"] = [=[Places an action onto into the specified action slot.]=],
	["PlaySound"] = [=[Plays the specified sound by SoundKitID.]=],
	["PlaySoundFile"] = [=[Plays the specified sound by [[FileDataID]] or addon file path.]=],
	["PromoteToLeader"] = [=[Promotes a unit to group leader.]=],
	["PutItemInBackpack"] = [=[Places the item on the cursor into the player's backpack.]=],
	["PutItemInBag"] = [=[Places the item on the cursor into the specified bag slot.]=],
	["QuestChooseRewardError"] = [=[Throws an error when the quest reward method doesn't work.]=],
	["QuestIsDaily"] = [=[True if the offered quest is a daily quest.]=],
	["QuestIsWeekly"] = [=[True if the offered quest is a weekly quest.]=],
	["QuestLogPushQuest"] = [=[Shares the current quest in the quest log with other players.]=],
	["RandomRoll"] = [=[Performs a random roll between two values.]=],
	["RejectProposal"] = [=[Declines a LFG invite and leaves the queue.]=],
	["RemoveChatWindowChannel"] = [=[Removes the specified chat channel from a chat window.]=],
	["RemoveChatWindowMessages"] = [=[Removes the specified chat message type from a chat window.]=],
	["RemoveItemFromArtifact"] = [=[Removes a [[Keystone]] from the selected artifact.]=],
	["RemoveTrackedAchievement"] = [=[Untracks an achievement from the WatchFrame.]=],
	["RenamePetition"] = [=[Renames the current petition.]=],
	["ReplaceEnchant"] = [=[Confirms the "Replace Enchant" dialog.]=],
	["ReplaceTradeEnchant"] = [=[Confirms that an enchant applied to the trade frame should replace an existing enchant.]=],
	["RepopMe"] = [=[Releases your ghost to the graveyard when dead.]=],
	["RequestBattlefieldScoreData"] = [=[Requests the latest battlefield score data from the server.]=],
	["RequestBattlegroundInstanceInfo"] = [=[Requests the available instances of a battleground.]=],
	["RequestRaidInfo"] = [=[Requests which instances the player is saved to.]=],
	["RequestTimePlayed"] = [=[Requests a summary of time played.]=],
	["ResetInstances"] = [=[Resets all instances for the character.]=],
	["RestartGx"] = [=[Restarts the graphics engine.]=],
	["RetrieveCorpse"] = [=[Resurrects when the player is standing near its corpse.]=],
	["RollOnLoot"] = [=[Rolls or passes on loot.]=],
	["RunBinding"] = [=[Executes a key binding.]=],
	["RunMacro"] = [=[Executes a macro.]=],
	["RunMacroText"] = [=[Executes a string as if it was a macro.]=],
	["RunScript"] = [=[Executes a string of Lua code.]=],
	["SaveBindings"] = [=[Saves account or character specific key bindings.]=],
	["SaveView"] = [=[Saves a camera angle. The last position loaded is stored in the [[CVar cameraView]].]=],
	["Screenshot"] = [=[Takes a screenshot.]=],
	["securecall"] = [=[Calls the specified function without propagating taint to the caller.]=],
	["SecureCmdOptionParse"] = [=[Evaluates macro conditionals without the need of a macro.]=],
	["SendMail"] = [=[Sends in-game mail.]=],
	["SendSystemMessage"] = [=[Prints a yellow CHAT_MSG_SYSTEM message.]=],
	["SetAchievementComparisonUnit"] = [=[Sets the unit to be compared to.]=],
	["SetActionBarToggles"] = [=[Sets the visible state for each action bar.]=],
	["SetAutoDeclineGuildInvites"] = [=[Sets whether guild invites should be automatically declined.]=],
	["SetBattlefieldScoreFaction"] = [=[Sets the faction to show on the battlefield scoreboard.]=],
	["SetBinding"] = [=[Sets a key binding to an action.]=],
	["SetBindingClick"] = [=[Sets a binding to click the specified Button widget.]=],
	["SetBindingSpell"] = [=[Sets a binding to cast the specified spell.]=],
	["SetChannelOwner"] = [=[Sets the channel owner.]=],
	["SetConsoleKey"] = [=[Sets the console key (normally ~).]=],
	["SetCurrentTitle"] = [=[Sets the player's displayed title.]=],
	["SetCursor"] = [=[Sets the current cursor texture.]=],
	["SetDungeonDifficultyID"] = [=[Sets the player's dungeon difficulty.]=],
	["seterrorhandler"] = [=[Sets the error handler to the given function.]=],
	["SetFactionActive"] = [=[Flags the specified faction as active in the reputation window.]=],
	["SetFactionInactive"] = [=[Flags the specified faction as inactive in the reputation window.]=],
	["SetGuildBankTabInfo"] = [=[Sets the name and icon of a guild bank tab.]=],
	["SetGuildBankTabPermissions"] = [=[Modifies the permissions for a guild bank tab.]=],
	["SetGuildBankWithdrawGoldLimit"] = [=[Sets the gold withdraw limit for the guild bank.]=],
	["SetGuildInfoText"] = [=[Sets the guild info text.]=],
	["SetGuildRosterSelection"] = [=[Selects a guild member in the roster.]=],
	["SetGuildRosterShowOffline"] = [=[Sets the show offline guild members flag.]=],
	["SetLFGComment"] = [=[Sets the comment in the LFG browser.]=],
	["SetLootMethod"] = [=[Set the current loot method.]=],
	["SetLootThreshold"] = [=[Sets the loot quality threshold for group/master loot.]=],
	["SetMultiCastSpell"] = [=[Sets the totem spell for a specific totem bar slot.]=],
	["SetOptOutOfLoot"] = [=[Sets whether to automatically pass on all loot.]=],
	["SetOverrideBinding"] = [=[Sets an override key binding.]=],
	["SetOverrideBindingClick"] = [=[Sets an override binding that performs a button click.]=],
	["SetPVP"] = [=[Flags the player for PvP combat.]=],
	["SetRaidDifficultyID"] = [=[Sets the raid difficulty.]=],
	["SetRaidTarget"] = [=[Assigns a [[Target marker|raid target]] icon to a unit.]=],
	["SetSelectedArtifact"] = [=[Sets the selected artifact to an archaeology race.]=],
	["SetTracking"] = [=[Sets a minimap tracking method.]=],
	["SetTrainerServiceTypeFilter"] = [=[Sets the status of a skill filter in the trainer window.]=],
	["SetupFullscreenScale"] = [=[Sizes a frame to take up the entire screen regardless of screen resolution.]=],
	["SetView"] = [=[Sets the camera to a predefined camera position (1-5).]=],
	["SetWatchedFactionIndex"] = [=[Watches a faction in the reputation window.]=],
	["SignPetition"] = [=[Signs the currently viewed petition.]=],
	["SitStandOrDescendStart"] = [=[Makes the player sit, stand, or descend (while swimming or flying).]=],
	["SocketItemToArtifact"] = [=[Adds a [[keystone]] to the selected archaeology artifact.]=],
	["SortGuildRoster"] = [=[Sorts the guild roster on a certain column.]=],
	["SpellCanTargetUnit"] = [=[True if the spell awaiting target selection can be cast on the unit.]=],
	["SpellIsTargeting"] = [=[True if a spell is about to be cast and is waiting for the player to select a target.]=],
	["SpellStopCasting"] = [=[Stops the current spellcast.]=],
	["SpellStopTargeting"] = [=[Cancels the spell awaiting target selection.]=],
	["SpellTargetUnit"] = [=[Casts the spell awaiting target selection on the unit.]=],
	["SplitContainerItem"] = [=[Places part of a stack of items from a container onto the cursor.]=],
	["StartDuel"] = [=[Challenges the specified player to a duel.]=],
	["StopMusic"] = [=[Stops the currently playing music.]=],
	["Stuck"] = [=[Notifies the game engine that the player is stuck.]=],
	["SummonRandomCritter"] = [=[No longer does anything.]=],
	["SwapRaidSubgroup"] = [=[Swaps two raid members into different groups.]=],
	["TakeInboxItem"] = [=[Takes the attached item from the mailbox message.]=],
	["TakeInboxMoney"] = [=[Take the attached money from the mailbox message at index.]=],
	["TakeTaxiNode"] = [=[Travels to the specified flight path node.]=],
	["TargetLastEnemy"] = [=[Targets the previously targeted enemy.]=],
	["TargetNearestFriend"] = [=[Targets the nearest friendly unit.]=],
	["TargetUnit"] = [=[Targets the specified unit.]=],
	["TaxiNodeCost"] = [=[Returns the cost of the flight path in copper.]=],
	["TaxiNodeGetType"] = [=[Returns the type of a flight path node.]=],
	["TaxiNodeName"] = [=[Returns the name of a flight path node.]=],
	["TaxiNodePosition"] = [=[Returns the position of a flight point on the taxi map.]=],
	["TurnLeftStart"] = [=[Turns the player left at the specified time.]=],
	["TurnOrActionStart"] = [=[Starts a "right click" in the 3D game world.]=],
	["TurnOrActionStop"] = [=[Stops a "right click" in the 3D game world.]=],
	["TurnRightStart"] = [=[Turns the player right at the specified time.]=],
	["UninviteUnit"] = [=[Removes a player from the group if you're the leader, or initiates a vote to kick.]=],
	["UnitAffectingCombat"] = [=[True if the unit is in combat.]=],
	["UnitArmor"] = [=[Returns the armor stats for the unit.]=],
	["UnitAura"] = [=[Returns the buffs/debuffs for the unit.]=],
	["UnitClass"] = [=[Returns the class of the unit.]=],
	["UnitCreatureFamily"] = [=[Returns the creature type of the unit (e.g. Crab).]=],
	["UnitCreatureType"] = [=[Returns the creature classification type of the unit (e.g. Beast).]=],
	["UnitDamage"] = [=[Returns the damage stats for the unit.]=],
	["UnitDetailedThreatSituation"] = [=[Returns detailed info for the threat status of one unit against another.]=],
	["UnitDistanceSquared"] = [=[Returns the squared distance to a unit in your group.]=],
	["UnitExists"] = [=[True if the unit exists.]=],
	["UnitFactionGroup"] = [=[Returns the faction (Horde/Alliance) a unit belongs to.]=],
	["UnitGUID"] = [=[Returns the GUID of the unit.]=],
	["UnitHasIncomingResurrection"] = [=[True if the unit is currently being resurrected.]=],
	["UnitHealth"] = [=[Returns the current health of the unit.]=],
	["UnitHealthMax"] = [=[Returns the maximum health of the unit.]=],
	["UnitHonor"] = [=[Returns the current amount of honor the unit has for the current rank.]=],
	["UnitHonorLevel"] = [=[Returns the current honor rank of the unit.]=],
	["UnitHonorMax"] = [=[Returns the maximum amount of honor for the current rank.]=],
	["UnitInBattleground"] = [=[Returns the unit index if the unit is in your battleground.]=],
	["UnitInParty"] = [=[True if the unit is a member of your party.]=],
	["UnitInRaid"] = [=[Returns the index if the unit is in your raid group.]=],
	["UnitInRange"] = [=[True if the unit (party or raid only) is in 40 yards range.]=],
	["UnitIsAFK"] = [=[True if a friendly unit is AFK (Away from keyboard).]=],
	["UnitIsCharmed"] = [=[True if the unit is charmed.]=],
	["UnitIsConnected"] = [=[True if the unit is connected to the game (i.e. not offline).]=],
	["UnitIsDead"] = [=[True if the unit is dead.]=],
	["UnitIsDeadOrGhost"] = [=[True if the unit is dead or in ghost form.]=],
	["UnitIsDND"] = [=[True if a unit is DND (Do not disturb).]=],
	["UnitIsEnemy"] = [=[True if the specified units are hostile to each other.]=],
	["UnitIsFeignDeath"] = [=[True if the unit (must be a group member) is feigning death.]=],
	["UnitIsFriend"] = [=[True if the specified units are friendly to each other.]=],
	["UnitIsGhost"] = [=[True if the unit is in ghost form.]=],
	["UnitIsPlayer"] = [=[True if the unit is a player character.]=],
	["UnitIsPossessed"] = [=[True if the unit is currently under control of another (e.g. Mind Control).]=],
	["UnitIsPVP"] = [=[True if the unit is flagged for PVP.]=],
	["UnitIsPVPFreeForAll"] = [=[True if the unit is flagged for free-for-all PVP (e.g. in a world arena).]=],
	["UnitIsSameServer"] = [=[True if the unit is from the same (connected) realm.]=],
	["UnitIsTrivial"] = [=[Ttrue if the unit is trivial (i.e. "grey" to the player).]=],
	["UnitIsUnit"] = [=[True if the specified units are the same unit.]=],
	["UnitIsVisible"] = [=[True if the game client can see the unit.]=],
	["UnitLevel"] = [=[Returns the level of the unit.]=],
	["UnitName"] = [=[Returns the name and realm of the unit.]=],
	["UnitOnTaxi"] = [=[True if the unit is on a flight path.]=],
	["UnitPlayerControlled"] = [=[True if the unit is controlled by a player.]=],
	["UnitPlayerOrPetInParty"] = [=[True if different unit or pet is a member of the party.]=],
	["UnitPlayerOrPetInRaid"] = [=[True if different unit or pet is a member of the raid.]=],
	["UnitPosition"] = [=[Returns the position of a unit in the current world area.]=],
	["UnitPower"] = [=[Returns the current power resource of the unit.]=],
	["UnitPowerMax"] = [=[Returns the maximum power resource of the unit.]=],
	["UnitPVPName"] = [=[Returns the unit's name with title (e.g. "Bob the Explorer").]=],
	["UnitRace"] = [=[Returns the race of the unit.]=],
	["UnitRangedAttackPower"] = [=[Returns the ranged attack power of the unit.]=],
	["UnitRangedDamage"] = [=[Returns the ranged attack speed and damage of the unit.]=],
	["UnitReaction"] = [=[Returns the reaction of the specified unit to another unit.]=],
	["UnitSelectionColor"] = [=[Returns the color of the outline and circle underneath the unit.]=],
	["UnitSelectionType"] = [=[Returns the selection type of the outline and circle underneath the unit.]=],
	["UnitSex"] = [=[Returns the gender of the unit.]=],
	["UnitStat"] = [=[Returns the basic attributes for a unit (strength, agility, stamina, intellect).]=],
	["UnitThreatSituation"] = [=[Returns the threat status of the specified unit to another unit.]=],
	["UnitUsingVehicle"] = [=[True if the unit is currently in a vehicle.]=],
	["UnitXP"] = [=[Returns the current XP of the unit; only works on the player.]=],
	["UnitXPMax"] = [=[Returns the maximum XP of the unit; only works on the player.]=],
	["UnlockVoidStorage"] = [=[Purchases the Void Storage.]=],
	["UseAction"] = [=[Perform the action in the specified action slot.]=],
	["UseContainerItem"] = [=[Uses an item from a container depending on the situation.]=],
	["UseItemByName"] = [=[Uses the specified item.]=],
}

return t
