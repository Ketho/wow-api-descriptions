-- API with matching descriptions on the main listing and individual page

local t = {
	["AbandonSkill"] = [=[The player abandons a skill.]=],
	["Ambiguate"] = [=[Returns a version of a character-realm string suitable for use in a given context.]=],
	["C_AchievementInfo.GetSupercedingAchievements"] = [=[Returns the next achievement in a series.]=],
	["C_AchievementInfo.SetPortraitTexture"] = [=[Sets a portrait texture for the unit being achievement compared.]=],
	["C_AlliedRaces.GetAllRacialAbilitiesFromID"] = [=[Returns the racial spells from an allied race.]=],
	["C_AlliedRaces.GetRaceInfoByID"] = [=[Returns allied race info.]=],
	["C_AreaPoiInfo.GetAreaPOIForMap"] = [=[Returns area points of interest for a map.]=],
	["C_AreaPoiInfo.IsAreaPOITimed"] = [=[Returns whether an area poi is timed.]=],
	["C_ArtifactUI.GetAppearanceInfo"] = [=[Returns information about a selected artifact appearance.]=],
	["C_ArtifactUI.GetAppearanceInfoByID"] = [=[Returns information about a selected artifact appearance.]=],
	["C_AuctionHouse.CancelAuction"] = [=[Cancels an owned auction.]=],
	["C_AuctionHouse.ConfirmCommoditiesPurchase"] = [=[Completes a commodity item purchase started with StartCommoditiesPurchase.]=],
	["C_AuctionHouse.GetCommoditySearchResultInfo"] = [=[Returns a search result for a specific commodity item.]=],
	["C_AuctionHouse.GetItemSearchResultInfo"] = [=[Returns a specific auction from search results for an item.]=],
	["C_AuctionHouse.GetNumReplicateItems"] = [=[Returns the number of auctions found by an [[API C_AuctionHouse.ReplicateItems|ReplicateItems]] query.]=],
	["C_AuctionHouse.GetReplicateItemInfo"] = [=[Returns information about a specific auction from a [[API C_AuctionHouse.ReplicateItems|ReplicateItems]] query.]=],
	["C_AuctionHouse.GetReplicateItemTimeLeft"] = [=[Returns the time left for an auction from a [[API C_AuctionHouse.ReplicateItems|ReplicateItems]] query.]=],
	["C_AuctionHouse.PlaceBid"] = [=[Places a bid or purchase on a non-commodity item.]=],
	["C_AuctionHouse.PostCommodity"] = [=[Posts a commodity item on the auction house.]=],
	["C_AuctionHouse.PostItem"] = [=[Posts an item on the auction house.]=],
	["C_AuctionHouse.ReplicateItems"] = [=[Queries all auctions on the auction house.]=],
	["C_AuctionHouse.SearchForFavorites"] = [=[Searches for favorited items.]=],
	["C_AuctionHouse.SendSearchQuery"] = [=[Searches for the auctions of a specific item on the auction house.]=],
	["C_AuctionHouse.SendSellSearchQuery"] = [=[Searches for all auctions that are variants of a piece of gear, determined a specific item ID.]=],
	["C_AuctionHouse.StartCommoditiesPurchase"] = [=[Starts a commodity item purchase.]=],
	["C_BattleNet.GetAccountInfoByID"] = [=[Returns information about a Battle.net friend account.]=],
	["C_BattleNet.GetGameAccountInfoByID"] = [=[Returns information on the game the Battle.net friend is playing.]=],
	["C_BlackMarket.GetNumItems"] = [=[Returns the number of auctions on the [[Black Market Auction House]].]=],
	["C_BlackMarket.ItemPlaceBid"] = [=[Places a bid on a black market auction.]=],
	["C_BlackMarket.RequestItems"] = [=[Requests updated black market auction information from the server.]=],
	["C_CVar.GetCVarBitfield"] = [=[Returns the bitfield of a console variable.]=],
	["C_CVar.GetCVarBool"] = [=[Returns the boolean value of a console variable.]=],
	["C_CVar.GetCVarDefault"] = [=[Returns the default value of a console variable.]=],
	["C_CVar.SetCVar"] = [=[Sets a console variable.]=],
	["C_CVar.SetCVarBitfield"] = [=[Sets the bitfield of a console variable.]=],
	["C_Calendar.AddEvent"] = [=[Saves the new event currently being created to the server.]=],
	["C_Calendar.CanAddEvent"] = [=[Returns whether the player can add an event.]=],
	["C_Calendar.CanSendInvite"] = [=[Returns whether the player can send invites.]=],
	["C_Calendar.CloseEvent"] = [=[Closes the selected event without saving it.]=],
	["C_Calendar.ContextMenuEventCanComplain"] = [=[Returns whether the player can report the event as spam.]=],
	["C_Calendar.ContextMenuEventCanEdit"] = [=[Returns whether the player can edit the event.]=],
	["C_Calendar.ContextMenuEventCanRemove"] = [=[Returns whether the player can remove the event.]=],
	["C_Calendar.ContextMenuEventComplain"] = [=[Reports the event as spam.]=],
	["C_Calendar.ContextMenuEventCopy"] = [=[Copies the event to the clipboard.]=],
	["C_Calendar.ContextMenuEventPaste"] = [=[Pastes the clipboard event to the date.]=],
	["C_Calendar.ContextMenuEventRemove"] = [=[Deletes the event.]=],
	["C_Calendar.ContextMenuInviteAvailable"] = [=[Accepts the invitation to the event.]=],
	["C_Calendar.ContextMenuInviteDecline"] = [=[Declines the invitation to the event.]=],
	["C_Calendar.ContextMenuInviteRemove"] = [=[Removes the event from the calendar.]=],
	["C_Calendar.CreatePlayerEvent"] = [=[Creates a new calendar event candidate for the player.]=],
	["C_Calendar.EventAvailable"] = [=[Accepts the invitation to the currently open event.]=],
	["C_Calendar.EventCanEdit"] = [=[Returns whether the event can be edited.]=],
	["C_Calendar.EventClearAutoApprove"] = [=[Turns off automatic confirmations.]=],
	["C_Calendar.EventClearLocked"] = [=[Unlocks the event.]=],
	["C_Calendar.EventDecline"] = [=[Declines the invitation to the currently open event.]=],
	["C_Calendar.EventGetInvite"] = [=[Returns status information for an invitee for the currently opened event.]=],
	["C_Calendar.EventHasPendingInvite"] = [=[Returns whether the player has an unanswered invitation to the currently selected event.]=],
	["C_Calendar.EventHaveSettingsChanged"] = [=[Returns whether the currently opened event has been modified.]=],
	["C_Calendar.EventInvite"] = [=[Invites a player to the currently selected event.]=],
	["C_Calendar.EventSetDate"] = [=[Sets the date for the currently opened event.]=],
	["C_Calendar.EventSetInviteStatus"] = [=[Sets the invitation status of a player to the current event.]=],
	["C_Calendar.EventSetTime"] = [=[Sets the time for the currently opened event.]=],
	["C_Calendar.EventSetTitle"] = [=[Sets the title for the currently opened event.]=],
	["C_Calendar.EventSetType"] = [=[Sets the event type for the current calendar event.]=],
	["C_Calendar.GetDayEvent"] = [=[Retrieve information about the specified event.]=],
	["C_Calendar.GetEventInfo"] = [=[Returns detailed information about an event.]=],
	["C_Calendar.GetHolidayInfo"] = [=[Returns seasonal holiday info.]=],
	["C_Calendar.GetMaxCreateDate"] = [=[Returns the last day supported by the Calendar API.]=],
	["C_Calendar.GetMinDate"] = [=[Returns the first day supported by the Calendar API.]=],
	["C_Calendar.GetMonthInfo"] = [=[Returns information about the calendar month by offset.]=],
	["C_Calendar.GetNumDayEvents"] = [=[Returns the number of events for a given day/month offset.]=],
	["C_Calendar.GetNumInvites"] = [=[Returns the number of invitees for the currently opened event.]=],
	["C_Calendar.OpenCalendar"] = [=[Requests calendar information from the server. Does not open the calendar frame.]=],
	["C_Calendar.OpenEvent"] = [=[Establishes an event for future calendar API calls]=],
	["C_Calendar.RemoveEvent"] = [=[Removes the selected event from the calendar (invitees only).]=],
	["C_Calendar.SetAbsMonth"] = [=[Sets the reference month and year for functions which use a month offset.]=],
	["C_Calendar.UpdateEvent"] = [=[Saves the selected event.]=],
	["C_ChatBubbles.GetAllChatBubbles"] = [=[Returns all active chat bubbles.]=],
	["C_ChatInfo.GetRegisteredAddonMessagePrefixes"] = [=[Returns addon message prefixes the client is currently registered to receive.]=],
	["C_ChatInfo.IsAddonMessagePrefixRegistered"] = [=[Returns whether the prefix is registered.]=],
	["C_ChatInfo.ReplaceIconAndGroupExpressions"] = [=[Replaces icon and group tags like {rt4}, {diamond} and {g1}.]=],
	["C_Console.GetAllCommands"] = [=[Returns all console variables and commands.]=],
	["C_Console.GetColorFromType"] = [=[Returns color info for a color type.]=],
	["C_Console.GetFontHeight"] = [=[Returns the console's currently used font height.]=],
	["C_Console.PrintAllMatchingCommands"] = [=[Prints all matching console commands.]=],
	["C_Console.SetFontHeight"] = [=[Sets the console's font height.]=],
	["C_ContributionCollector.Close"] = [=[Closes the contribution collector API state.]=],
	["C_ContributionCollector.Contribute"] = [=[Contributes resources to a building.]=],
	["C_ContributionCollector.GetActive"] = [=[Returns the currently active buildings.]=],
	["C_ContributionCollector.GetAtlases"] = [=[Returns a table listing the possible states for a building.]=],
	["C_ContributionCollector.GetContributionAppearance"] = [=[Returns contribution appearance info.]=],
	["C_ContributionCollector.GetContributionCollectorsForMap"] = [=[Returns contribution buildings on a map.]=],
	["C_ContributionCollector.GetContributionResult"] = [=[Returns a value indicating the result of a contribution.]=],
	["C_ContributionCollector.GetDescription"] = [=[Returns the description of a building.]=],
	["C_ContributionCollector.GetManagedContributionsForCreatureID"] = [=[Returns contributions for a creature.]=],
	["C_ContributionCollector.GetName"] = [=[Returns the name of a building.]=],
	["C_ContributionCollector.GetOrderIndex"] = [=[Returns the order in which buildings are displayed.]=],
	["C_ContributionCollector.GetRequiredContributionCurrency"] = [=[Returns the currencyID and amount needed to contribute to a building.]=],
	["C_ContributionCollector.GetRequiredContributionItem"] = [=[Returns the itemID and amount needed to contribute to a building.]=],
	["C_ContributionCollector.GetRewardQuestID"] = [=[Returns the hidden quest that is flagged completed when a contribution is made.]=],
	["C_ContributionCollector.GetState"] = [=[Returns the current state of a building, its completion percentage, and time until next state change.]=],
	["C_ContributionCollector.HasPendingContribution"] = [=[Returns whether there is a pending contribution.]=],
	["C_CreatureInfo.GetFactionInfo"] = [=[Returns the faction name for a race.]=],
	["C_CreatureInfo.GetRaceInfo"] = [=[Returns both localized and locale-independent race names.]=],
	["C_CurrencyInfo.GetFactionGrantedByCurrency"] = [=[Gets the faction ID for currency that is immediately converted into reputation with that faction instead.]=],
	["C_DateAndTime.CompareCalendarTime"] = [=[Compares two dates with eachother.]=],
	["C_DateAndTime.GetCurrentCalendarTime"] = [=[Returns the realm's current date and time.]=],
	["C_DeathInfo.GetCorpseMapPosition"] = [=[Returns the location of the player's corpse on the map.]=],
	["C_DeathInfo.GetGraveyardsForMap"] = [=[Returns graveyard info and location for a map.]=],
	["C_DeathInfo.GetSelfResurrectOptions"] = [=[Returns self resurrect options for your character, including from soulstones.]=],
	["C_DeathInfo.UseSelfResurrectOption"] = [=[Uses a soulstone or similar means of self resurrection.]=],
	["C_EncounterJournal.GetDungeonEntrancesForMap"] = [=[Returns the instance entrances for a map.]=],
	["C_EncounterJournal.GetEncountersOnMap"] = [=[Returns boss pin locations for an instance map.]=],
	["C_EncounterJournal.GetSectionIconFlags"] = [=[Returns the icon flags for a section, such as Magic Effect and Heroic Difficulty]=],
	["C_EncounterJournal.GetSectionInfo"] = [=[Returns information about an entry in the Abilities section of the Encounter Journal.]=],
	["C_EncounterJournal.InstanceHasLoot"] = [=[Returns whether an instance has a loot table in the journal.]=],
	["C_EncounterJournal.IsEncounterComplete"] = [=[Returns if a boss encounter has been completed.]=],
	["C_EquipmentSet.AssignSpecToEquipmentSet"] = [=[Assigns an equipment set to a specialization.]=],
	["C_EquipmentSet.CanUseEquipmentSets"] = [=[Returns whether any equipment sets can be used.]=],
	["C_EquipmentSet.ClearIgnoredSlotsForSave"] = [=[Clears ignored slots for saving.]=],
	["C_EquipmentSet.CreateEquipmentSet"] = [=[Creates an equipment set.]=],
	["C_EquipmentSet.DeleteEquipmentSet"] = [=[Deletes an equipment set.]=],
	["C_EquipmentSet.EquipmentSetContainsLockedItems"] = [=[Returns whether an equipment set has locked items]=],
	["C_EquipmentSet.GetEquipmentSetAssignedSpec"] = [=[Returns the specialization assigned to an equipment set.]=],
	["C_EquipmentSet.GetEquipmentSetForSpec"] = [=[Returns the equipment set currently assigned to a specific specialization.]=],
	["C_EquipmentSet.GetEquipmentSetID"] = [=[Returns the set ID of an equipment set with the specified name.]=],
	["C_EquipmentSet.GetEquipmentSetIDs"] = [=[Returns an array containing all currently saved equipment set IDs.]=],
	["C_EquipmentSet.GetEquipmentSetInfo"] = [=[Returns information about a saved equipment set.]=],
	["C_EquipmentSet.GetIgnoredSlots"] = [=[Returns ignored slots of an equipment set.]=],
	["C_EquipmentSet.GetItemIDs"] = [=[Returns the item IDs of an equipment set.]=],
	["C_EquipmentSet.GetItemLocations"] = [=[Returns the location of all items in an equipment set.]=],
	["C_EquipmentSet.GetNumEquipmentSets"] = [=[Returns the number of saved equipment sets.]=],
	["C_EquipmentSet.IgnoreSlotForSave"] = [=[Ignores an equipment slot for saving.]=],
	["C_EquipmentSet.IsSlotIgnoredForSave"] = [=[Returns whether a slot is ignored for saving.]=],
	["C_EquipmentSet.ModifyEquipmentSet"] = [=[Modifies an equipment set.]=],
	["C_EquipmentSet.PickupEquipmentSet"] = [=[Picks up an equipment set, placing it on the cursor.]=],
	["C_EquipmentSet.SaveEquipmentSet"] = [=[Saves your currently equipped items into an equipment set.]=],
	["C_EquipmentSet.UnassignEquipmentSetSpec"] = [=[Unassigns an equipment set from a specialization.]=],
	["C_EquipmentSet.UnignoreSlotForSave"] = [=[Unignores a slot for saving.]=],
	["C_EquipmentSet.UseEquipmentSet"] = [=[Equips items from a specified equipment set.]=],
	["C_FriendList.AddFriend"] = [=[Adds a friend to your friend list.]=],
	["C_FriendList.AddIgnore"] = [=[Adds a player to your ignore list.]=],
	["C_FriendList.AddOrDelIgnore"] = [=[Adds or removes a player to/from the ignore list.]=],
	["C_FriendList.AddOrRemoveFriend"] = [=[Adds or removes a player to or from the friends list.]=],
	["C_FriendList.DelIgnore"] = [=[Removes a player from your ignore list.]=],
	["C_FriendList.DelIgnoreByIndex"] = [=[Removes a player from your ignore list.]=],
	["C_FriendList.GetFriendInfo"] = [=[Retrieves information about a person on your friends list.]=],
	["C_FriendList.GetIgnoreName"] = [=[Returns the name of a currently ignored player.]=],
	["C_FriendList.GetNumFriends"] = [=[Returns how many friends you have.]=],
	["C_FriendList.GetNumIgnores"] = [=[Returns the number of entries on your ignore list.]=],
	["C_FriendList.GetNumOnlineFriends"] = [=[Returns the number of online friends.]=],
	["C_FriendList.GetNumWhoResults"] = [=[Get the number of entries resulting from your most recent /who query.]=],
	["C_FriendList.GetSelectedFriend"] = [=[Returns the index of the currently selected friend.]=],
	["C_FriendList.GetSelectedIgnore"] = [=[Returns the currently selected index in the ignore listing.]=],
	["C_FriendList.GetWhoInfo"] = [=[Retrieves info about a character on your current /who list.]=],
	["C_FriendList.IsFriend"] = [=[Returns whether a character is your friend.]=],
	["C_FriendList.IsIgnored"] = [=[Returns whether a character is being ignored by you.]=],
	["C_FriendList.IsIgnoredByGuid"] = [=[Returns whether a character is being ignored by you.]=],
	["C_FriendList.RemoveFriend"] = [=[Removes a friend from the friends list.]=],
	["C_FriendList.RemoveFriendByIndex"] = [=[Removes a friend from the friends list.]=],
	["C_FriendList.SetFriendNotes"] = [=[Sets the note text for a friend.]=],
	["C_FriendList.SetFriendNotesByIndex"] = [=[Sets the note text for a friend.]=],
	["C_FriendList.SetSelectedFriend"] = [=[Updates the current selected friend.]=],
	["C_FriendList.SetSelectedIgnore"] = [=[Sets the currently selected ignore entry.]=],
	["C_FriendList.ShowFriends"] = [=[Requests updated friends information from server.]=],
	["C_FriendList.SortWho"] = [=[Sorts the last /who reply received by the client.]=],
	["C_GossipInfo.GetNumActiveQuests"] = [=[Returns the number of active quests that you should eventually turn in to this NPC.]=],
	["C_GossipInfo.GetNumAvailableQuests"] = [=[Returns the number of quests (that you are not already on) offered by this NPC.]=],
	["C_GossipInfo.GetNumOptions"] = [=[Returns the number of conversation options available with this NPC.]=],
	["C_GossipInfo.SelectOption"] = [=[Selects a gossip (conversation) option.]=],
	["C_GuildInfo.GetGuildRankOrder"] = [=[Returns the current rank of a guild member.]=],
	["C_GuildInfo.GuildControlGetRankFlags"] = [=[Returns the permission flags for a rank index.]=],
	["C_GuildInfo.GuildRoster"] = [=[Requests updated guild roster information from the server.]=],
	["C_GuildInfo.QueryGuildMemberRecipes"] = [=[Shows the guild member recipes for a profession.]=],
	["C_GuildInfo.RemoveFromGuild"] = [=[Removes a member from the guild.]=],
	["C_GuildInfo.SetGuildRankOrder"] = [=[Sets the guild rank for a member.]=],
	["C_GuildInfo.SetNote"] = [=[Sets the guild note for a member.]=],
	["C_IncomingSummon.HasIncomingSummon"] = [=[Returns whether a group member has an incoming summon.]=],
	["C_IncomingSummon.IncomingSummonStatus"] = [=[Returns the status of an group member's incoming summon.]=],
	["C_InvasionInfo.AreInvasionsAvailable"] = [=[Returns true if invasions are active in the same physical area as the player.]=],
	["C_InvasionInfo.GetInvasionForUiMapID"] = [=[Returns any invasion for a map.]=],
	["C_InvasionInfo.GetInvasionInfo"] = [=[Returns invasion info.]=],
	["C_InvasionInfo.GetInvasionTimeLeft"] = [=[Returns the time left for an invasion.]=],
	["C_IslandsQueue.CloseIslandsQueueScreen"] = [=[Closes the islands queue screen.]=],
	["C_IslandsQueue.GetIslandDifficultyInfo"] = [=[Returns the island expedition modes.]=],
	["C_IslandsQueue.GetIslandsMaxGroupSize"] = [=[Returns the max group size for expeditions.]=],
	["C_IslandsQueue.GetIslandsWeeklyQuestID"] = [=[Returns the weekly island quest.]=],
	["C_IslandsQueue.QueueForIsland"] = [=[Queues for an island expedition.]=],
	["C_IslandsQueue.RequestPreloadRewardData"] = [=[Preloads reward data for a quest id.]=],
	["C_ItemSocketInfo.CompleteSocketing"] = [=[Completes socketing an item, binding it to the player.]=],
	["C_KeyBindings.GetCustomBindingType"] = [=[Returns the type of a custom binding.]=],
	["C_LFGList.CreateListing"] = [=[Creates a group finder listing.]=],
	["C_LFGList.GetActiveEntryInfo"] = [=[Returns information about your currently listed group.]=],
	["C_LFGList.GetApplicantInfo"] = [=[Returns status informations and custom message of an applicant.]=],
	["C_LossOfControl.GetActiveLossOfControlData"] = [=[Returns info about an active loss-of-control effect.]=],
	["C_LossOfControl.GetActiveLossOfControlDataCount"] = [=[Returns the number of active loss-of-control effects.]=],
	["C_Mail.HasInboxMoney"] = [=[Returns true if a mail has money attached.]=],
	["C_Mail.IsCommandPending"] = [=[Returns true if the current mail command is still processing.]=],
	["C_Map.GetAreaInfo"] = [=[Returns a map subzone name.]=],
	["C_Map.GetBestMapForUnit"] = [=[Returns the current UI map for the given unit. Only works for the player and party members.]=],
	["C_Map.GetBountySetMaps"] = [=[Returns the maps for a bounty.]=],
	["C_Map.GetFallbackWorldMapID"] = [=[Returns the world map id.]=],
	["C_Map.GetMapArtBackgroundAtlas"] = [=[Returns the background atlas for a map.]=],
	["C_Map.GetMapArtHelpTextPosition"] = [=[Returns the position for the "Click to Zoom In" hint text on flight maps.]=],
	["C_Map.GetMapArtID"] = [=[Returns the art for a (phased) map.]=],
	["C_Map.GetMapArtLayerTextures"] = [=[Returns the art layer textures for a map.]=],
	["C_Map.GetMapArtLayers"] = [=[Returns the art layers for a map.]=],
	["C_Map.GetMapBannersForMap"] = [=[Returns the poi banners for a map.]=],
	["C_Map.GetMapDisplayInfo"] = [=[Returns whether group member pins should be hidden.]=],
	["C_Map.GetMapGroupID"] = [=[Returns the map group for a map.]=],
	["C_Map.GetMapGroupMembersInfo"] = [=[Returns the floors for a map group.]=],
	["C_Map.GetMapHighlightInfoAtPosition"] = [=[Returns a map highlight pin for a location.]=],
	["C_Map.GetMapInfo"] = [=[Returns map information.]=],
	["C_Map.GetMapLevels"] = [=[Returns the suggested player and battle pet levels for a map.]=],
	["C_Map.GetMapLinksForMap"] = [=[Returns the map pins that link to another map.]=],
	["C_Map.GetMapPosFromWorldPos"] = [=[Translates a world map position to a map position.]=],
	["C_Map.MapHasArt"] = [=[Returns true if the map has art and can be displayed by the FrameXML.]=],
	["C_Map.RequestPreloadMap"] = [=[Preloads textures for a map.]=],
	["C_MapExplorationInfo.GetExploredAreaIDsAtPosition"] = [=[Returns the explored areas for the location on a map.]=],
	["C_MapExplorationInfo.GetExploredMapTextures"] = [=[Returns explored map textures for a map.]=],
	["C_MountJournal.Dismiss"] = [=[Dismisses the currently summoned mount.]=],
	["C_MountJournal.GetCollectedFilterSetting"] = [=[Indicates whether the specified mount journal filter is enabled.]=],
	["C_MountJournal.GetIsFavorite"] = [=[Indicates whether the specified mount is marked as a favorite.]=],
	["C_MountJournal.GetMountFromItem"] = [=[Returns the mount for an item ID.]=],
	["C_MountJournal.GetMountFromSpell"] = [=[Returns the mount for a spell ID.]=],
	["C_MountJournal.GetMountIDs"] = [=[Returns the IDs of mounts listed in the mount journal.]=],
	["C_MountJournal.GetMountInfoByID"] = [=[Returns information about the specified mount.]=],
	["C_MountJournal.GetMountInfoExtraByID"] = [=[Returns extra information about the specified mount.]=],
	["C_MountJournal.GetMountUsabilityByID"] = [=[Returns if a mount is currently usable by the player.]=],
	["C_MountJournal.GetNumMounts"] = [=[Returns the number of mounts listed in the mount journal.]=],
	["C_MountJournal.Pickup"] = [=[Picks up the specified mount onto the cursor, usually in preparation for placing it on an action button.]=],
	["C_MountJournal.SetCollectedFilterSetting"] = [=[Enables or disables the specified mount journal filter.]=],
	["C_MountJournal.SetIsFavorite"] = [=[Marks or unmarks the specified mount as a favorite.]=],
	["C_MountJournal.SummonByID"] = [=[Summons the specified mount.]=],
	["C_NewItems.ClearAll"] = [=[Clears the new item flag on all items in the player's inventory.]=],
	["C_NewItems.RemoveNewItem"] = [=[Clears the "new item" flag.]=],
	["C_PaperDollInfo.GetInspectItemLevel"] = [=[Returns the average item level for the unit being inspected.]=],
	["C_PartyInfo.ConvertToParty"] = [=[Converts a raid group with 5 or less members to a party.]=],
	["C_PartyInfo.GetInviteReferralInfo"] = [=[Returns info for Quick join invites.]=],
	["C_PetInfo.GetPetTamersForMap"] = [=[Returns the pet tamers on a map.]=],
	["C_PetJournal.CagePetByID"] = [=[Puts the pet into a cage.]=],
	["C_PetJournal.ClearSearchFilter"] = [=[Clears the search box in the pet journal.]=],
	["C_PetJournal.GetNumPetSources"] = [=[Returns information about the number of pet sources.]=],
	["C_PetJournal.GetNumPetTypes"] = [=[Returns information about the number of pet types.]=],
	["C_PetJournal.GetNumPets"] = [=[Returns information about the number of battle pets.]=],
	["C_PetJournal.GetPetInfoByIndex"] = [=[Returns information about a battle pet.]=],
	["C_PetJournal.GetPetInfoByPetID"] = [=[Returns information about a battle pet.]=],
	["C_PetJournal.GetPetInfoBySpeciesID"] = [=[Returns information about a pet species.]=],
	["C_PetJournal.GetSummonedPetGUID"] = [=[Returns information about a battle pet.]=],
	["C_PetJournal.PetCanBeReleased"] = [=[Returns true if you can release the pet.]=],
	["C_PetJournal.PetIsSummonable"] = [=[Returns true if you can summon this pet.]=],
	["C_PetJournal.PetIsTradable"] = [=[Returns whether or not a pet from the Pet Journal is tradable.]=],
	["C_PetJournal.ReleasePetByID"] = [=[Releases the pet.]=],
	["C_PetJournal.SetCustomName"] = [=[Sets a custom name for the pet.]=],
	["C_PetJournal.SetFavorite"] = [=[Sets (or clears) the pet as a favorite.]=],
	["C_PetJournal.SetPetTypeFilter"] = [=[Sets the pet type in the filter menu.]=],
	["C_PetJournal.SetSearchFilter"] = [=[Sets the search filter in the pet journal.]=],
	["C_PetJournal.SummonPetByGUID"] = [=[Summons (or dismisses) a pet.]=],
	["C_PetJournal.SummonRandomPet"] = [=[Summons a random battle pet companion.]=],
	["C_PlayerInfo.CanPlayerUseMountEquipment"] = [=[Returns true if the player can use mount equipment.]=],
	["C_PlayerInfo.GetClass"] = [=[Returns the class of a player.]=],
	["C_PlayerInfo.GetName"] = [=[Returns the name of a player.]=],
	["C_PlayerInfo.GetRace"] = [=[Returns the race of a player.]=],
	["C_PlayerInfo.GetSex"] = [=[Returns the sex of a player.]=],
	["C_QuestLog.GetInfo"] = [=[Returns information about a quest in the player's quest log.]=],
	["C_QuestLog.GetMaxNumQuests"] = [=[This is the maximum number of quests a player can be on, including hidden quests, world quests, emissaries etc]=],
	["C_QuestLog.GetMaxNumQuestsCanAccept"] = [=[This is the maximum number of standard quests a player can accept. These are quests that are normally visible in the quest log.]=],
	["C_QuestLog.GetNumQuestLogEntries"] = [=[Returns the number of entries in the quest log.]=],
	["C_QuestLog.GetTimeAllowed"] = [=[Returns the time available to complete a quest.]=],
	["C_QuestLog.GetTitleForQuestID"] = [=[Returns the name for a Quest ID.]=],
	["C_QuestLog.IsQuestFlaggedCompleted"] = [=[Returns if a quest has been completed.]=],
	["C_QuestLog.SortQuestWatches"] = [=[Sorts watched quests by proximity to the player character.]=],
	["C_ReportSystem.CanReportPlayer"] = [=[Returns if a player can be reported.]=],
	["C_ReportSystem.InitiateReportPlayer"] = [=[Initiates a report against a player.]=],
	["C_ReportSystem.SendReportPlayer"] = [=[Sends an initiated report against a player.]=],
	["C_ReportSystem.SetPendingReportPetTarget"] = [=[Report a pet for an inappropriate name.]=],
	["C_ResearchInfo.GetDigSitesForMap"] = [=[Returns the dig sites on a map.]=],
	["C_Social.GetLastScreenshotIndex"] = [=[Returns the index of the last screenshot.]=],
	["C_Social.GetMaxTweetLength"] = [=[Returns the max character length of a tweet.]=],
	["C_Social.GetScreenshotInfoByIndex"] = [=[Returns the display resolution of a screenshot.]=],
	["C_StorePublic.IsDisabledByParentalControls"] = [=[Returns whether access to the in-game shop is disabled by parental controls.]=],
	["C_StorePublic.IsEnabled"] = [=[Returns whether the In-Game Store is available for the player.]=],
	["C_Texture.GetAtlasInfo"] = [=[Returns atlas info.]=],
	["C_ToyBox.GetToyInfo"] = [=[Returns toy info.]=],
	["C_TradeSkillUI.CloseTradeSkill"] = [=[Closes an open trade skill window.]=],
	["C_TradeSkillUI.CraftRecipe"] = [=[Performs the tradeskill a specified number of times.]=],
	["C_TradeSkillUI.GetRecipeInfo"] = [=[Returns information for a recipe.]=],
	["C_TradeSkillUI.GetRecipeNumReagents"] = [=[Returns the number of distinct reagents needed for the specified recipe.]=],
	["C_TradeSkillUI.GetRecipeReagentInfo"] = [=[Returns the information for a reagent needed by a recipe.]=],
	["C_TradeSkillUI.GetRecipeReagentItemLink"] = [=[Returns a link for a reagent needed by a recipe.]=],
	["C_TradeSkillUI.GetRecipeRepeatCount"] = [=[Returns the number of times the current item is being crafted.]=],
	["C_TradeSkillUI.IsTradeSkillGuild"] = [=[Checks if the Trade Skill UI is open for a profession in the guild.]=],
	["C_TradeSkillUI.IsTradeSkillLinked"] = [=[Checks if the Trade Skill UI is open for a profession linked by another character.]=],
	["C_Transmog.CanTransmogItemWithItem"] = [=[Returns whether an item can be transmogrified to look like another item.]=],
	["C_Transmog.GetSlotForInventoryType"] = [=[Returns the equipment slot for an inventory type.]=],
	["C_UIWidgetManager.GetAllWidgetsBySetID"] = [=[Returns all widgets for a widget set ID.]=],
	["C_UIWidgetManager.GetTopCenterWidgetSetID"] = [=[Returns the widget set ID for the top center part of the screen.]=],
	["C_VideoOptions.GetGxAdapterInfo"] = [=[Returns info about the system's graphics adapter.]=],
	["CameraOrSelectOrMoveStart"] = [=[Begin "Left click" in the 3D world.]=],
	["CanReplaceGuildMaster"] = [=[Returns whether you can impeach the Guild Master due to inactivity.]=],
	["CanShowAchievementUI"] = [=[Returns if the AchievementUI can be displayed.]=],
	["CanSummonFriend"] = [=[Returns whether you can RaF summon a particular unit.]=],
	["CanTrackBattlePets"] = [=[Returns whether the player can track battle pets.]=],
	["CanUseVoidStorage"] = [=[Returns if the player has access to the Void Storage.]=],
	["CancelLogout"] = [=[Cancels the logout timer (from camping or quitting).]=],
	["CaseAccentInsensitiveParse"] = [=[Converts a string with accented letters to lowercase.]=],
	["CastPetAction"] = [=[Cast the corresponding pet skill.]=],
	["ChannelBan"] = [=[Bans a player from the specified channel.]=],
	["ChannelInvite"] = [=[Invites the specified user to the channel.]=],
	["ChannelModerator"] = [=[Sets the specified player as the channel moderator.]=],
	["ChannelToggleAnnouncements"] = [=[Toggles the channel to display announcements either on or off.]=],
	["ChannelUnmoderator"] = [=[Takes the specified user away from the moderator status.]=],
	["ClearVoidTransferDepositSlot"] = [=[Clears the specified Void Transfer deposit slot.]=],
	["ClickVoidStorageSlot"] = [=[Clicks the specified Void Storage slot.]=],
	["ClickVoidTransferDepositSlot"] = [=[Clicks the specified Void Transfer deposit slot.]=],
	["ClickVoidTransferWithdrawalSlot"] = [=[Clicks the specified Void Transfer withdrawal slot.]=],
	["CloseItemText"] = [=[Close an open item text (book, plaque, etc).]=],
	["CloseMerchant"] = [=[Closes the merchant window.]=],
	["CloseTrainer"] = [=[Closes the trainer window.]=],
	["ClosestUnitPosition"] = [=[Returns the unit position of the closest creature by ID. Only works for mobs in the starting zones.]=],
	["CollapseFactionHeader"] = [=[Collapse a faction header row.]=],
	["ConsoleExec"] = [=[Execute a console command.]=],
	["DeclineQuest"] = [=[Declines the currently offered quest.]=],
	["DeleteMacro"] = [=[Deletes a macro.]=],
	["DestroyTotem"] = [=[Destroys a totem/minion.]=],
	["DisableAllAddOns"] = [=[Disable all AddOns for subsequent sessions.]=],
	["EnableAllAddOns"] = [=[Enable all AddOns for subsequent sessions.]=],
	["EquipCursorItem"] = [=[Equips the currently picked up item to a specific inventory slot.]=],
	["EquipItemByName"] = [=[Equips an item, optionally into a specified slot.]=],
	["EquipPendingItem"] = [=[Equips the currently pending Bind-on-Equip or Bind-on-Pickup item from the specified inventory slot.]=],
	["ExecuteVoidTransfer"] = [=[Applies all pending void transfers (and pays for the cost of any deposited items).]=],
	["ExpandFactionHeader"] = [=[Expand a faction header row.]=],
	["FlashClientIcon"] = [=[Flashes the game client icon in the Operating System.]=],
	["GetAccountExpansionLevel"] = [=[Returns the expansion level the account has been flagged for.]=],
	["GetAchievementCategory"] = [=[Returns the category number the requested achievement belongs to.]=],
	["GetAchievementComparisonInfo"] = [=[Returns information about the comparison unit's achievements.]=],
	["GetActionCharges"] = [=[Returns information about the charges of a charge-accumulating player ability.]=],
	["GetActiveSpecGroup"] = [=[Returns the index of the current active specialization/talent/glyph group.]=],
	["GetAddOnInfo"] = [=[Get information about an AddOn.]=],
	["GetArchaeologyRaceInfo"] = [=[Returns the information for a specific race used in Archaeology.]=],
	["GetArtifactInfoByRace"] = [=[Returns the information for a specific race's artifact.]=],
	["GetAutoCompleteResults"] = [=[Returns possible player names matching a given prefix string and specified requirements.]=],
	["GetBattlefieldInstanceExpiration"] = [=[Get shutdown timer for the battlefield instance.]=],
	["GetBattlegroundInfo"] = [=[Returns information about a battleground type.]=],
	["GetCVarInfo"] = [=[Returns information on a console variable.]=],
	["GetClassInfo"] = [=[Returns information about a class.]=],
	["GetClientDisplayExpansionLevel"] = [=[Returns the expansion level of the game client.]=],
	["GetContainerItemLink"] = [=[Returns a link of the object located in the specified slot of a specified bag.]=],
	["GetContainerNumSlots"] = [=[Returns the total number of slots in the bag specified by the index.]=],
	["GetCursorPosition"] = [=[Returns the cursor's position on the screen.]=],
	["GetDifficultyInfo"] = [=[Returns information about a difficulty.]=],
	["GetExpansionLevel"] = [=[Returns the expansion level currently accessible by the player.]=],
	["GetExpertise"] = [=[Returns the player's expertise percentage for main hand, offhand and ranged attacks.]=],
	["GetGameMessageInfo"] = [=[Returns the error message for an id.]=],
	["GetGameTime"] = [=[Returns the realm's current time in hours and minutes.]=],
	["GetGraphicsAPIs"] = [=[Returns the supported graphics APIs for the system, D3D11_LEGACY, D3D11, D3D12, etc.]=],
	["GetGuildBankTabPermissions"] = [=[Gets display / player's access info. Limited data available without bank proximity.]=],
	["GetGuildBankWithdrawGoldLimit"] = [=[Returns withdraw limit for currently selected rank in guild control.]=],
	["GetGuildFactionInfo"] = [=[Returns the guild name and faction standing of the player.]=],
	["GetGuildTabardFiles"] = [=[Returns File IDs of tabard textures used in guild bank logo.]=],
	["GetInstanceLockTimeRemainingEncounter"] = [=[Returns information about bosses in the instance the player is about to be saved to.]=],
	["GetInventoryItemCooldown"] = [=[Get cooldown information for an inventory item.]=],
	["GetInventoryItemCount"] = [=[Determine the quantity of an item in an inventory slot.]=],
	["GetItemClassInfo"] = [=[Returns the name of the item type.]=],
	["GetItemStats"] = [=[Returns a table of stats for an item.]=],
	["GetItemSubClassInfo"] = [=[Returns the name of the item subtype.]=],
	["GetLFGDeserterExpiration"] = [=[Returns the time at which you may once again use the dungeon finder after prematurely leaving a group.]=],
	["GetLFGRandomCooldownExpiration"] = [=[Returns the time at which you may once again queue for a random dungeon.]=],
	["GetLootSourceInfo"] = [=[Returns information about the source of the objects in a loot slot.]=],
	["GetMacroBody"] = [=[Returns the body (macro text) of a macro.]=],
	["GetMaxBattlefieldID"] = [=[Returns the max number of battlefields you can queue for.]=],
	["GetMaxTalentTier"] = [=[Returns the number of available talent tiers.]=],
	["GetMerchantItemCostInfo"] = [=[Returns "alternative currency" information about an item.]=],
	["GetNumAddOns"] = [=[Get the number of user supplied AddOns.]=],
	["GetNumArtifactsByRace"] = [=[Returns the amount of artifacts the player has acquired from the provided race.]=],
	["GetNumComparisonCompletedAchievements"] = [=[Returns the number of completed achievements for the comparison player.]=],
	["GetNumFactions"] = [=[Returns the number of lines in the faction display.]=],
	["GetNumLanguages"] = [=[Returns the number of languages your character can speak.]=],
	["GetNumQuestLogChoices"] = [=[Returns the number of options someone has when getting a quest item.]=],
	["GetNumSpecGroups"] = [=[Returns the number of specialization group (dual specs) the player has.]=],
	["GetNumSpecializations"] = [=[Returns the number of available specializations.]=],
	["GetNumSpecializationsForClassID"] = [=[Returns the number of specializations available to a particular class.]=],
	["GetNumUnspentTalents"] = [=[Returns the number of unspent talents.]=],
	["GetNumVoidTransferDeposit"] = [=[Returns the number of items being deposited into the Void Storage.]=],
	["GetNumVoidTransferWithdrawal"] = [=[Returns the number of items being withdrawed from the Void Storage.]=],
	["GetPlayerAuraBySpellID"] = [=[Returns an active buff/debuff by spell ID on the player character.]=],
	["GetProfessionInfo"] = [=[Gets details on a profession from its index including name, icon, and skill level.]=],
	["GetQuestLink"] = [=[Returns a [[QuestLink]] for a quest.]=],
	["GetQuestLogChoiceInfo"] = [=[Returns a bunch of data about a quest reward choice from the quest log.]=],
	["GetQuestLogItemLink"] = [=[Returns item link for selected quest reward/choice/required item from quest log.]=],
	["GetRewardText"] = [=[Returns quest reward text, displayed by the NPC before the player hits "Complete Quest".]=],
	["GetSendMailPrice"] = [=[Gets the cost for sending mail.]=],
	["GetServerExpansionLevel"] = [=[Returns the expansion level currently active on the server.]=],
	["GetSessionTime"] = [=[Returns the time since you opened the game client.]=],
	["GetShapeshiftForm"] = [=[Returns zero-based index of current form/stance.]=],
	["GetSpecialization"] = [=[Returns the index of the player's current specialization.]=],
	["GetSpecializationRole"] = [=[Returns the role a specialization is intended to perform.]=],
	["GetSpecializationRoleByID"] = [=[Returns the role a specialization is intended to perform.]=],
	["GetSpellCharges"] = [=[Returns information about the charges of a charge-accumulating player ability.]=],
	["GetSpellDescription"] = [=[Returns the spell description.]=],
	["GetSpellInfo"] = [=[Returns spell info.]=],
	["GetStablePetInfo"] = [=[Returns information about a specific stabled pet.]=],
	["GetTickTime"] = [=[Returns the time in seconds since the end of the previous frame and the start of the current frame.]=],
	["GetTimePreciseSec"] = [=[Returns a monotonic timestamp in seconds, with millisecond precision.]=],
	["GetTrainerServiceDescription"] = [=[Returns the description of a specific trainer service.]=],
	["GetTrainerServiceInfo"] = [=[Returns information about a trainer service.]=],
	["GetTrainerServiceItemLink"] = [=[Returns an item link for a trainer service.]=],
	["GetTrainerServiceTypeFilter"] = [=[Returns the status of a skill filter in the trainer window.]=],
	["GetVoidItemHyperlinkString"] = [=[Returns the item link of an item in void storage.]=],
	["GetVoidTransferCost"] = [=[Returns the total Void Transfer cost.]=],
	["GetZonePVPInfo"] = [=[Returns PVP info for the current zone.]=],
	["GuildLeave"] = [=[Removes you from your current guild.]=],
	["HasLFGRestrictions"] = [=[Returns whether the player is in a random party formed by the dungeon finder system.]=],
	["IsAccountSecured"] = [=[Returns if the account has been secured with [[Blizzard Mobile Authenticator]].]=],
	["IsInGuild"] = [=[Lets you know whether you are in a guild.]=],
	["IsInventoryItemLocked"] = [=[Returns whether an inventory item is locked, usually as it awaits pending action.]=],
	["IsItemInRange"] = [=[Returns whether the item is in usable range of the unit.]=],
	["IsLFGComplete"] = [=[Returns whether you have currently finished a Dungeon Finder instance.]=],
	["IsRecognizedName"] = [=[Returns true if a given character name is recognized by the client.]=],
	["IsSpellClassOrSpec"] = [=[Returns whether a given spell is specific to a specialization and/or class.]=],
	["IsSpellKnown"] = [=[Returns whether the player (or pet) knows the given spell.]=],
	["IsTrackingBattlePets"] = [=[Returns whether the player is currently tracking battle pets.]=],
	["IsTrialAccount"] = [=[Returns whether the player is using a trial (free-to-play) account.]=],
	["IsUsableSpell"] = [=[Determines whether a spell can be used by the player character.]=],
	["JoinSkirmish"] = [=[Queue for a arena either solo or as a group.]=],
	["LeaveChannelByName"] = [=[Leaves the channel with the specified name.]=],
	["MoveBackwardStart"] = [=[The player begins moving backward at the specified time.]=],
	["MoveBackwardStop"] = [=[The player stops moving backward at the specified time.]=],
	["MoveForwardStart"] = [=[The player begins moving forward at the specified time.]=],
	["MoveForwardStop"] = [=[The player stops moving forward at the specified time.]=],
	["MoveViewInStart"] = [=[Begins zooming the camera in.]=],
	["MoveViewOutStart"] = [=[Begins zooming the camera out.]=],
	["MuteSoundFile"] = [=[Mutes a sound file.]=],
	["NotWhileDeadError"] = [=[Generates an error message saying you cannot do that while dead.]=],
	["PetAbandon"] = [=[Permanently abandons your pet.]=],
	["PetAttack"] = [=[Instruct your pet to attack your target.]=],
	["PetDefensiveMode"] = [=[Set your pet in defensive mode.]=],
	["PetDismiss"] = [=[Dismiss your pet.]=],
	["PetFollow"] = [=[Instruct your pet to follow you.]=],
	["PetHasActionBar"] = [=[Determine if player has a pet with an action bar.]=],
	["PetPassiveMode"] = [=[Set your pet into passive mode.]=],
	["PetWait"] = [=[Instruct your pet to remain still.]=],
	["PickupBagFromSlot"] = [=[Picks up the bag from the specified slot, placing it in the cursor.]=],
	["PlayMusic"] = [=[Plays the specified sound file on loop to the "Music" sound channel.]=],
	["QuestGetAutoAccept"] = [=[Returns whether the last-offered quest was automatically accepted.]=],
	["Quit"] = [=[Quits the game.]=],
	["RepairAllItems"] = [=[Repairs all equipped and inventory items.]=],
	["ReplaceGuildMaster"] = [=[Impeaches the current Guild Master.]=],
	["SelectedRealmName"] = [=[Returns the realm name that will be used in Recruit-a-Friend invitations.]=],
	["SendChatMessage"] = [=[Sends a chat message.]=],
	["SetAchievementSearchString"] = [=[Starts a search for achievements containing the specified text.]=],
	["SetChannelPassword"] = [=[Changes the password of the current channel.]=],
	["SetGuildBankText"] = [=[Modifies info text for a tab.]=],
	["SetPortraitTexture"] = [=[Sets a texture to a unit's 2D portrait.]=],
	["SetPortraitToTexture"] = [=[Applies a circular mask to a texture, making it resemble a portrait.]=],
	["SetRaidSubgroup"] = [=[Move a raid member from his current subgroup into a different (non-full) subgroup.]=],
	["SetSpecialization"] = [=[Selects a specialization.]=],
	["SetTradeMoney"] = [=[Sets the amount of money offered as part of the player's trade offer.]=],
	["StrafeLeftStart"] = [=[The player begins strafing left at the specified time.]=],
	["StrafeLeftStop"] = [=[The player stops strafing left at the specified time.]=],
	["StrafeRightStart"] = [=[The player begins strafing right at the specified time.]=],
	["StrafeRightStop"] = [=[The player stops strafing right at the specified time.]=],
	["SummonFriend"] = [=[Summons a player using the RaF system.]=],
	["TargetLastTarget"] = [=[Selects the last target as the current target.]=],
	["TargetNearestEnemy"] = [=[Selects the nearest enemy as the current target.]=],
	["ToggleAutoRun"] = [=[Turns auto-run on or off.]=],
	["ToggleRun"] = [=[Toggle between running and walking.]=],
	["ToggleSheath"] = [=[Toggles sheathed or unsheathed weapons.]=],
	["TurnLeftStop"] = [=[The player stops turning left at the specified time.]=],
	["TurnRightStop"] = [=[The player stops turning right at the specified time.]=],
	["UnitAttackPower"] = [=[Returns the unit's melee attack power and modifiers.]=],
	["UnitAttackSpeed"] = [=[Returns the unit's melee attack speed for each hand.]=],
	["UnitCanAssist"] = [=[Indicates whether the first unit can assist the second unit.]=],
	["UnitCanAttack"] = [=[Returns true if the first unit can attack the second, false otherwise.]=],
	["UnitCanCooperate"] = [=[Returns true if the first unit can cooperate with the second, false otherwise.]=],
	["UnitCastingInfo"] = [=[Returns information about the spell currently being cast by the specified unit.]=],
	["UnitChannelInfo"] = [=[Returns information about the spell currently being channeled by the specified unit.]=],
	["UnitClassification"] = [=[Returns the classification of the specified unit (e.g., "elite" or "worldboss").]=],
	["UnitEffectiveLevel"] = [=[Returns the unit's effective (scaled) level.]=],
	["UnitGetIncomingHeals"] = [=[Returns the predicted heals cast on the specified unit.]=],
	["UnitGetTotalAbsorbs"] = [=[Returns the total amount of damage the unit can absorb before losing health.]=],
	["UnitGetTotalHealAbsorbs"] = [=[Returns the total amount of healing the unit can absorb without gaining health.]=],
	["UnitGroupRolesAssigned"] = [=[Returns the assigned role in a group formed via the Dungeon Finder Tool.]=],
	["UnitHasLFGDeserter"] = [=[Returns whether the unit is currently unable to use the dungeon finder due to leaving a group prematurely.]=],
	["UnitHasLFGRandomCooldown"] = [=[Returns whether the unit is currently under the effects of the random dungeon cooldown.]=],
	["UnitIsGroupLeader"] = [=[Returns whether the unit is the leader of a party or raid.]=],
	["UnitPhaseReason"] = [=[Returns the reason if a unit is NOT in the same phase.]=],
	["UnitPowerType"] = [=[Returns a number corresponding to the power type (e.g., mana, rage or energy) of the specified unit.]=],
	["UnitPvpClassification"] = [=[Returns whether the unit is a flag/orb carrier or cart runner.]=],
	["UnitQuestTrivialLevelRange"] = [=[Returns the difference between the units' current level and the level at which fixed-level quests are of trivial difficulty.]=],
	["UnitSpellHaste"] = [=[Returns the current spell haste percentage for a unit.]=],
	["UnitTreatAsPlayerForDisplay"] = [=[Whether a unit should be treated as if it was an actual player.]=],
	["UnmuteSoundFile"] = [=[Unmutes a sound file.]=],
	["UpdateWindow"] = [=[When in windowed mode, updates the window. This also aligns it to the top of the screen and increases the size to max widowed size.]=],
	["UseInventoryItem"] = [=[Use an item in a specific inventory slot.]=],
}

return t
